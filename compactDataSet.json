[
  {
    "key": "aac",
    "title": "AAC audio file format",
    "description": "Advanced Audio Coding format, designed to be the successor format to MP3, with generally better sound quality.",
    "keywords": "audio/aac"
  },
  {
    "key": "abortcontroller",
    "title": "AbortController & AbortSignal",
    "description": "Controller object that allows you to abort one or more DOM requests made with the Fetch API.",
    "keywords": "abort api"
  },
  {
    "key": "accelerometer",
    "title": "Accelerometer",
    "description": "Defines `Accelerometer`, `LinearAccelerationSensor` and `GravitySensor` interfaces for obtaining information about acceleration applied to the X, Y and Z axis of a device that hosts the sensor.",
    "keywords": ""
  },
  {
    "key": "addeventlistener",
    "title": "EventTarget.addEventListener()",
    "description": "The modern standard API for adding DOM event handlers. Introduced in the DOM Level 2 Events spec. Also implies support for `removeEventListener`, the [capture phase](https://dom.spec.whatwg.org/#dom-event-capturing_phase) of DOM event dispatch, as well as the `stopPropagation()` and `preventDefault()` event methods.",
    "keywords": "event,target,add,remove,listener,capture,capturing,phase"
  },
  {
    "key": "ambient-light",
    "title": "Ambient Light Sensor",
    "description": "Defines a concrete sensor interface to monitor the ambient light level or illuminance of the device’s environment.",
    "keywords": ""
  },
  {
    "key": "apng",
    "title": "Animated PNG (APNG)",
    "description": "Like animated GIFs, but allowing 24-bit colors and alpha transparency",
    "keywords": ""
  },
  {
    "key": "array-find",
    "title": "Array.prototype.find",
    "description": "The `find()` method returns the value of the first item in the array based on the result of the provided testing function.",
    "keywords": "array.find"
  },
  {
    "key": "array-find-index",
    "title": "Array.prototype.findIndex",
    "description": "The `findIndex()` method returns the index of the first element in the array that satisfies the provided testing function.",
    "keywords": "array.findIndex"
  },
  {
    "key": "array-flat",
    "title": "flat & flatMap array methods",
    "description": "Methods to flatten any sub-arrays found in an array by concatenating their elements.",
    "keywords": "array.prototype.flat,array.prototype.flatmap"
  },
  {
    "key": "array-includes",
    "title": "Array.prototype.includes",
    "description": "Determines whether or not an array includes the given value, returning a boolean value (unlike `indexOf`).",
    "keywords": "array.includes"
  },
  {
    "key": "arrow-functions",
    "title": "Arrow functions",
    "description": "Function shorthand using `=>` syntax and lexical `this` binding.",
    "keywords": "ES6,JavaScript,fat,arrow,function,lexical,this"
  },
  {
    "key": "asmjs",
    "title": "asm.js",
    "description": "An extraordinarily optimizable, low-level subset of JavaScript, intended to be a compile target from languages like C++.",
    "keywords": "asm,asm.js,asmjs,WebAssembly"
  },
  {
    "key": "async-functions",
    "title": "Async functions",
    "description": "Async functions make it possible to treat functions returning Promise objects as if they were synchronous.",
    "keywords": "ES2017,JavaScript,function,async,await,promises,asynchronous"
  },
  {
    "key": "atob-btoa",
    "title": "Base64 encoding and decoding",
    "description": "Utility functions for of encoding and decoding strings to and from base 64: window.atob() and window.btoa().",
    "keywords": "atob,btoa"
  },
  {
    "key": "audio",
    "title": "Audio element",
    "description": "Method of playing sound on webpages (without requiring a plug-in). Includes support for the following media properties: `currentSrc`, `currentTime`, `paused`, `playbackRate`, `buffered`, `duration`, `played`, `seekable`, `ended`, `autoplay`, `loop`, `controls`, `volume` & `muted`",
    "keywords": "<audio>"
  },
  {
    "key": "audio-api",
    "title": "Web Audio API",
    "description": "High-level JavaScript API for processing and synthesizing audio",
    "keywords": "web-audio,webaudio,AudioContext,AudioBuffer,AudioNode"
  },
  {
    "key": "audiotracks",
    "title": "Audio Tracks",
    "description": "Method of specifying and selecting between multiple audio tracks. Useful for providing audio descriptions, director's commentary, additional languages, alternative takes, etc.",
    "keywords": "AudioTrack,AudioTrackList,media,multiple,selection"
  },
  {
    "key": "autofocus",
    "title": "Autofocus attribute",
    "description": "Allows a form field to be immediately focused on page load.",
    "keywords": ""
  },
  {
    "key": "auxclick",
    "title": "Auxclick",
    "description": "The click event for non-primary buttons of input devices",
    "keywords": "click,auxclick,non-primary button,middle click"
  },
  {
    "key": "av1",
    "title": "AV1 video format",
    "description": "AV1 (AOMedia Video 1) is a royalty-free video format by the Alliance for Open Media, meant to succeed its predecessor VP9 and compete with the HEVC/H.265 format.",
    "keywords": ""
  },
  {
    "key": "avif",
    "title": "AVIF image format",
    "description": "Image format based on the AV1 video format.",
    "keywords": ""
  },
  {
    "key": "background-attachment",
    "title": "CSS background-attachment",
    "description": "Method of defining how a background image is attached to a scrollable element. Values include `scroll` (default), `fixed` and `local`.",
    "keywords": ""
  },
  {
    "key": "background-img-opts",
    "title": "CSS3 Background-image options",
    "description": "New properties to affect background images, including background-clip, background-origin and background-size",
    "keywords": ""
  },
  {
    "key": "background-position-x-y",
    "title": "background-position-x & background-position-y",
    "description": "CSS longhand properties to define x or y positions separately.",
    "keywords": ""
  },
  {
    "key": "background-repeat-round-space",
    "title": "CSS background-repeat round and space",
    "description": "Allows CSS background images to be repeated without clipping.",
    "keywords": "4 value syntax,background-repeat: round,background-repeat: space"
  },
  {
    "key": "background-sync",
    "title": "Background Sync API",
    "description": "Provides one-off and periodic synchronization for Service Workers with an onsync event.",
    "keywords": "syncmanager"
  },
  {
    "key": "battery-status",
    "title": "Battery Status API",
    "description": "Method to provide information about the battery status of the hosting device.",
    "keywords": "navigator.battery,navigator.getbattery,batterymanager"
  },
  {
    "key": "beacon",
    "title": "Beacon API",
    "description": "Allows data to be sent asynchronously to a server with `navigator.sendBeacon`, even after a page was closed. Useful for posting analytics data the moment a user was finished using the page.",
    "keywords": ""
  },
  {
    "key": "beforeafterprint",
    "title": "Printing Events",
    "description": "Window fires `beforeprint` and `afterprint` events so the printed document can be annotated.",
    "keywords": "print,printer,printing,beforeprint,afterprint"
  },
  {
    "key": "bigint",
    "title": "BigInt",
    "description": "Arbitrary-precision integers in JavaScript.",
    "keywords": "int,integer,precision"
  },
  {
    "key": "blobbuilder",
    "title": "Blob constructing",
    "description": "Construct Blobs (binary large objects) either using the BlobBuilder API (deprecated) or the Blob constructor.",
    "keywords": ""
  },
  {
    "key": "bloburls",
    "title": "Blob URLs",
    "description": "Method of creating URL handles to the specified File or Blob object.",
    "keywords": "createobjecturl,revokeobjecturl"
  },
  {
    "key": "border-image",
    "title": "CSS3 Border images",
    "description": "Method of using images for borders",
    "keywords": "border-image-source,border-image-slice,border-image-repeat,border-image-width,,border-image-outset"
  },
  {
    "key": "border-radius",
    "title": "CSS3 Border-radius (rounded corners)",
    "description": "Method of making the border corners round. Covers support for the shorthand `border-radius` as well as the long-hand properties (e.g. `border-top-left-radius`)",
    "keywords": "roundedcorners, border radius,-moz-border-radius"
  },
  {
    "key": "broadcastchannel",
    "title": "BroadcastChannel",
    "description": "BroadcastChannel allows scripts from the same origin but other browsing contexts (windows, workers) to send each other messages.",
    "keywords": "broadcast,channel,messaging"
  },
  {
    "key": "brotli",
    "title": "Brotli Accept-Encoding/Content-Encoding",
    "description": "More effective lossless compression algorithm than gzip and deflate.",
    "keywords": "http,compression,accept,content,encoding"
  },
  {
    "key": "calc",
    "title": "calc() as CSS unit value",
    "description": "Method of allowing calculated values for length units, i.e. `width: calc(100% - 3em)`",
    "keywords": ""
  },
  {
    "key": "canvas",
    "title": "Canvas (basic support)",
    "description": "Method of generating fast, dynamic graphics using JavaScript.",
    "keywords": "toDataURL()"
  },
  {
    "key": "canvas-blending",
    "title": "Canvas blend modes",
    "description": "Method of defining the effect resulting from overlaying two layers on a Canvas element.",
    "keywords": ""
  },
  {
    "key": "canvas-text",
    "title": "Text API for Canvas",
    "description": "Method of displaying text on Canvas elements",
    "keywords": ""
  },
  {
    "key": "ch-unit",
    "title": "ch (character) unit",
    "description": "Unit representing the width of the character \"0\" in the current font, of particular use in combination with monospace fonts.",
    "keywords": "ch unit,character unit"
  },
  {
    "key": "chacha20-poly1305",
    "title": "ChaCha20-Poly1305 cipher suites for TLS",
    "description": "A set of cipher suites used in Transport Layer Security (TLS) protocol, using ChaCha20 for symmetric encryption and Poly1305 for authentication.",
    "keywords": "chacha20,poly1305,tls,cipher"
  },
  {
    "key": "channel-messaging",
    "title": "Channel messaging",
    "description": "Method for having two-way communication between browsing contexts (using MessageChannel)",
    "keywords": ""
  },
  {
    "key": "childnode-remove",
    "title": "ChildNode.remove()",
    "description": "DOM node method to remove the node itself from the document.",
    "keywords": "ChildNode,remove,delete,node,DOM"
  },
  {
    "key": "classlist",
    "title": "classList (DOMTokenList)",
    "description": "Method of easily manipulating classes on elements, using the DOMTokenList object.",
    "keywords": ""
  },
  {
    "key": "client-hints-dpr-width-viewport",
    "title": "Client Hints: DPR, Width, Viewport-Width",
    "description": "DPR, Width, and Viewport-Width hints enable proactive content negotiation between client and server, enabling automated delivery of optimized assets - e.g. auto-negotiating image DPR resolution.",
    "keywords": "client hints, client-hints, dpr, viewport, content-dpr"
  },
  {
    "key": "clipboard",
    "title": "Synchronous Clipboard API",
    "description": "API to provide copy, cut and paste events as well as provide access to the OS clipboard.",
    "keywords": "cut,copy,paste,clipboarddata,clipboardevent"
  },
  {
    "key": "comparedocumentposition",
    "title": "Node.compareDocumentPosition()",
    "description": "Compares the relative position of two nodes to each other in the DOM tree.",
    "keywords": "Node,compareDocumentPosition,compare,document,position,preceding,following,disconnected,before,after,contains,contained,DOM"
  },
  {
    "key": "console-basic",
    "title": "Basic console logging functions",
    "description": "Method of outputting data to the browser's console, intended for development purposes.",
    "keywords": "console.log,console.info,console.warn,console.error,window.console"
  },
  {
    "key": "console-time",
    "title": "console.time and console.timeEnd",
    "description": "Functions for measuring performance",
    "keywords": "console.time,console.timeEnd,window.console"
  },
  {
    "key": "const",
    "title": "const",
    "description": "Declares a constant with block level scope",
    "keywords": "ES6,constant,block,scope"
  },
  {
    "key": "constraint-validation",
    "title": "Constraint Validation API",
    "description": "API for better control over form field validation. Includes support for `checkValidity()`, `setCustomValidity()`, `reportValidity()` and validation states.",
    "keywords": ""
  },
  {
    "key": "contenteditable",
    "title": "contenteditable attribute (basic support)",
    "description": "Method of making any HTML element editable.",
    "keywords": "iscontenteditable"
  },
  {
    "key": "contentsecuritypolicy",
    "title": "Content Security Policy 1.0",
    "description": "Mitigate cross-site scripting attacks by only allowing certain sources of script, style, and other resources.",
    "keywords": "csp,security,header"
  },
  {
    "key": "contentsecuritypolicy2",
    "title": "Content Security Policy Level 2",
    "description": "Mitigate cross-site scripting attacks by only allowing certain sources of script, style, and other resources. CSP 2 adds hash-source, nonce-source, and five new directives",
    "keywords": "csp,header,nonce,hash"
  },
  {
    "key": "cors",
    "title": "Cross-Origin Resource Sharing",
    "description": "Method of performing XMLHttpRequests across domains",
    "keywords": ""
  },
  {
    "key": "createimagebitmap",
    "title": "createImageBitmap",
    "description": "Create image bitmap with support for resizing and adjusting quality",
    "keywords": ""
  },
  {
    "key": "credential-management",
    "title": "Credential Management API",
    "description": "API that provides a programmatic interface to the browser's credential manager. In short, an origin can request a user's credentials to sign them in, or can ask the browser to save credentials on the user's behalf. Both of these requests are user-mediated.",
    "keywords": "credential,navigator.credentials"
  },
  {
    "key": "cryptography",
    "title": "Web Cryptography",
    "description": "JavaScript API for performing basic cryptographic operations in web applications",
    "keywords": "subtle,subtlecrypto"
  },
  {
    "key": "css-all",
    "title": "CSS all property",
    "description": "A shorthand property for resetting all CSS properties except for `direction` and `unicode-bidi`.",
    "keywords": "CSS,all,property,shorthand,reset"
  },
  {
    "key": "css-animation",
    "title": "CSS Animation",
    "description": "Complex method of animating certain properties of an element",
    "keywords": "animations,css-animations,animation-name,animation-duration,animation-delay,animation-timing-function,animation-iteration-count,@keyframes,animationstart,animationend,animationiteration,css3 animation,steps,step-start,step-end,cubic-bezier"
  },
  {
    "key": "css-any-link",
    "title": "CSS :any-link selector",
    "description": "The `:any-link` CSS pseudo-class matches all elements that match `:link` or `:visited`",
    "keywords": "any-link,css4,selector,visited"
  },
  {
    "key": "css-appearance",
    "title": "CSS Appearance",
    "description": "The `appearance` property defines how elements (particularly form controls) appear by default. By setting the value to `none` the default appearance can be entirely redefined using other CSS properties.",
    "keywords": ""
  },
  {
    "key": "css-apply-rule",
    "title": "CSS @apply rule",
    "description": "Allows a set of CSS properties to be applied using a named variable",
    "keywords": ""
  },
  {
    "key": "css-at-counter-style",
    "title": "CSS Counter Styles",
    "description": "The @counter-style CSS at-rule allows custom counter styles to be defined. A @counter-style rule defines how to convert a counter value into a string representation.",
    "keywords": "css @counter-style, list-style"
  },
  {
    "key": "css-backdrop-filter",
    "title": "CSS Backdrop Filter",
    "description": "Method of applying filter effects (like blur, grayscale or hue) to content/elements below the target element.",
    "keywords": "blue,hue-rotate,invert,saturate,filter"
  },
  {
    "key": "css-background-offsets",
    "title": "CSS background-position edge offsets",
    "description": "Allows CSS background images to be positioned relative to the specified edge using the 3 to 4 value syntax. For example: `background-position: right 5px bottom 5px;` for positioning 5px from the bottom-right corner.",
    "keywords": "4 value syntax"
  },
  {
    "key": "css-backgroundblendmode",
    "title": "CSS background-blend-mode",
    "description": "Allows blending between CSS background images, gradients, and colors.",
    "keywords": "css blend modes,css blending modes,blending,multiply,screen,background"
  },
  {
    "key": "css-boxdecorationbreak",
    "title": "CSS box-decoration-break",
    "description": "Controls whether the box's margins, borders, padding, and other decorations wrap the broken edges of the box fragments (when the box is split by a break (page/column/region/line).",
    "keywords": "box-decoration,box decoration,break"
  },
  {
    "key": "css-boxshadow",
    "title": "CSS3 Box-shadow",
    "description": "Method of displaying an inner or outer shadow effect to elements",
    "keywords": "box-shadows,boxshadows,box shadow,shaow"
  },
  {
    "key": "css-canvas",
    "title": "CSS Canvas Drawings",
    "description": "Method of using HTML5 Canvas as a background image. Not currently part of any specification.",
    "keywords": ""
  },
  {
    "key": "css-caret-color",
    "title": "CSS caret-color",
    "description": "The `caret-color` property allows the color to be set of the caret (blinking text insertion pointer) in an editable text area.",
    "keywords": ""
  },
  {
    "key": "css-case-insensitive",
    "title": "Case-insensitive CSS attribute selectors",
    "description": "Including an `i` before the `]` in a CSS attribute selector causes the attribute value to be matched in an ASCII-case-insensitive manner. For example, `[b=\"xyz\" i]` would match both `<a b=\"xyz\">` and `<a b=\"XYZ\">`.",
    "keywords": "i,attribute,case,insensitive,sensitive,sensitivity,insensitivity"
  },
  {
    "key": "css-clip-path",
    "title": "CSS clip-path property (for HTML)",
    "description": "Method of defining the visible region of an HTML element using SVG or a shape definition.",
    "keywords": "clippath"
  },
  {
    "key": "css-color-adjust",
    "title": "CSS color-adjust",
    "description": "The `color-adjust` (or `-webkit-print-color-adjust` as prefixed in WebKit/Blink browsers) property is a non-standard CSS extension that can be used to force printing of background colors and images.",
    "keywords": "color-adjust,print-color-adjust,color adjust,print color adjust,coloradjust,printcoloradjust"
  },
  {
    "key": "css-color-function",
    "title": "CSS color function",
    "description": "The CSS `color()` function allows the browser to display colors in any color space, such as the P3 color space which can display colors outside of the default sRGB color space.",
    "keywords": "color(),Display-P3,A98-RGB,ProPhoto-RGB,REC-2020,Device-Dependent Colors,Profiled Colors,@color-profile,color space"
  },
  {
    "key": "css-conic-gradients",
    "title": "CSS Conical Gradients",
    "description": "Method of defining a conical or repeating conical color gradient as a CSS image.",
    "keywords": "conical-gradient,repeating-conical-gradient,gradient,conical"
  },
  {
    "key": "css-containment",
    "title": "CSS Containment",
    "description": "The CSS `contain` property lets developers limit the scope of the browser's styles, layout and paint work for faster and more efficient rendering.",
    "keywords": ""
  },
  {
    "key": "css-counters",
    "title": "CSS Counters",
    "description": "Method of controlling number values in generated content, using the `counter-reset` and `counter-increment` properties.",
    "keywords": ""
  },
  {
    "key": "css-crisp-edges",
    "title": "Crisp edges/pixelated images",
    "description": "Scales images with an algorithm that preserves edges and contrast, without smoothing colors or introducing blur. This is intended for images such as pixel art. Official values that accomplish this for the `image-rendering` property are `crisp-edges` and `pixelated`.",
    "keywords": "image-rendering,crisp-edges"
  },
  {
    "key": "css-cross-fade",
    "title": "CSS Cross-Fade Function",
    "description": "Image function to create a \"crossfade\" between images. This allows one image to transition (fade) into another based on a percentage value.",
    "keywords": "css,image,crossfade"
  },
  {
    "key": "css-default-pseudo",
    "title": ":default CSS pseudo-class",
    "description": "The `:default` pseudo-class matches checkboxes and radio buttons which are checked by default, `<option>`s with the `selected` attribute, and the default submit button (if any) of a form.",
    "keywords": ":default,default"
  },
  {
    "key": "css-descendant-gtgt",
    "title": "Explicit descendant combinator >>",
    "description": "An explicit, non-whitespace spelling of the descendant combinator. `A >> B` is equivalent to `A B`.",
    "keywords": ""
  },
  {
    "key": "css-deviceadaptation",
    "title": "CSS Device Adaptation",
    "description": "A standard way to override the size of viewport in web page using the `@viewport` rule, standardizing and replacing Apple's own popular `<meta>` viewport implementation.",
    "keywords": "viewport"
  },
  {
    "key": "css-dir-pseudo",
    "title": ":dir() CSS pseudo-class",
    "description": "Matches elements based on their directionality. `:dir(ltr)` matches elements which are Left-to-Right. `:dir(rtl)` matches elements which are Right-to-Left.",
    "keywords": ":dir,dir,direction,ltr,rtl,left,right"
  },
  {
    "key": "css-display-contents",
    "title": "CSS display: contents",
    "description": "`display: contents` causes an element's children to appear as if they were direct children of the element's parent, ignoring the element itself. This can be useful when a wrapper element should be ignored when using CSS grid or similar layout techniques.",
    "keywords": ""
  },
  {
    "key": "css-element-function",
    "title": "CSS element() function",
    "description": "This function renders a live image generated from an arbitrary HTML element",
    "keywords": "element, function"
  },
  {
    "key": "css-env-function",
    "title": "CSS Environment Variables env()",
    "description": "Usage of environment variables like `safe-area-inset-top`.",
    "keywords": "css env(),css constant(),css variables,safe-area-inset-top,safe-area-inset-right,safe-area-inset-bottom,safe-area-inset-left"
  },
  {
    "key": "css-exclusions",
    "title": "CSS Exclusions Level 1",
    "description": "Exclusions defines how inline content flows around elements. It extends the content wrapping ability of floats to any block-level element.",
    "keywords": "floats,exclusions,wrap-flow,wrap-through"
  },
  {
    "key": "css-featurequeries",
    "title": "CSS Feature Queries",
    "description": "CSS Feature Queries allow authors to condition rules based on whether particular property declarations are supported in CSS using the @supports at rule.",
    "keywords": "supports,conditional"
  },
  {
    "key": "css-filter-function",
    "title": "CSS filter() function",
    "description": "This function filters a CSS input image with a set of filter functions (like blur, grayscale or hue)",
    "keywords": "filter, function"
  },
  {
    "key": "css-filters",
    "title": "CSS Filter Effects",
    "description": "Method of applying filter effects using the `filter` property to elements, matching filters available in SVG. Filter functions include blur, brightness, contrast, drop-shadow, grayscale, hue-rotate, invert, opacity, sepia and saturate.",
    "keywords": "filter:"
  },
  {
    "key": "css-first-letter",
    "title": "::first-letter CSS pseudo-element selector",
    "description": "CSS pseudo-element that allows styling only the first \"letter\" of text within an element. Useful for implementing initial caps or drop caps styling.",
    "keywords": "first,letter,pseudo,element,class,selector"
  },
  {
    "key": "css-first-line",
    "title": "CSS first-line pseudo-element",
    "description": "Allows styling specifically for the first line of text using the `::first-line` pseudo-element. Note that only a limited set of properties can be applied.",
    "keywords": ""
  },
  {
    "key": "css-fixed",
    "title": "CSS position:fixed",
    "description": "Method of keeping an element in a fixed location regardless of scroll position",
    "keywords": ""
  },
  {
    "key": "css-focus-visible",
    "title": ":focus-visible CSS pseudo-class",
    "description": "The `:focus-visible` pseudo-class applies while an element matches the `:focus` pseudo-class, and the UA determines via heuristics that the focus should be specially indicated on the element (typically via a “focus ring”).",
    "keywords": "focus,ring,focusring,focus-ring,visible,focus-visible,pseudo"
  },
  {
    "key": "css-focus-within",
    "title": ":focus-within CSS pseudo-class",
    "description": "The `:focus-within` pseudo-class matches elements that either themselves match `:focus` or that have descendants which match `:focus`.",
    "keywords": "focus,within,focus-within,pseudo"
  },
  {
    "key": "css-font-rendering-controls",
    "title": "CSS font-rendering controls",
    "description": "`@font-face` descriptor (currently defined as `font-display`) that allows control over how a downloadable font renders before it is fully loaded.",
    "keywords": ""
  },
  {
    "key": "css-font-stretch",
    "title": "CSS font-stretch",
    "description": "If a font has multiple types of variations based on the width of characters, the `font-stretch` property allows the appropriate one to be selected. The property in itself does not cause the browser to stretch to a font.",
    "keywords": "font stretch"
  },
  {
    "key": "css-gencontent",
    "title": "CSS Generated content for pseudo-elements",
    "description": "Method of displaying text or images before or after the given element's contents using the ::before and ::after pseudo-elements. All browsers with support also support the `attr()` notation in the `content` property. ",
    "keywords": "before,after"
  },
  {
    "key": "css-gradients",
    "title": "CSS Gradients",
    "description": "Method of defining a linear or radial color gradient as a CSS image.",
    "keywords": "linear,linear-gradient,gradiant"
  },
  {
    "key": "css-grid",
    "title": "CSS Grid Layout (level 1)",
    "description": "Method of using a grid concept to lay out content, providing a mechanism for authors to divide available space for layout into columns and rows using a set of predictable sizing behaviors. Includes support for all `grid-*` properties and the `fr` unit.",
    "keywords": "grids,grid-row,grid-column,grid-template,display:grid,inline-grid,fr unit,fractional unit,cssgrid,justify-content:space-between,justify-content:space-around,align-content:space-between,align-content:space-around,space-between"
  },
  {
    "key": "css-hanging-punctuation",
    "title": "CSS hanging-punctuation",
    "description": "Allows some punctuation characters from start (or the end) of text elements to be placed \"outside\" of the box in order to preserve the reading flow.",
    "keywords": "hanging punctuation,force-end,allow-end"
  },
  {
    "key": "css-has",
    "title": ":has() CSS relational pseudo-class",
    "description": "Only select elements containing specified content. For example, `a:has(>img)` selects all `<a>` elements that contain an `<img>` child.",
    "keywords": "children,parent,selector"
  },
  {
    "key": "css-hyphens",
    "title": "CSS Hyphenation",
    "description": "Method of controlling when words at the end of lines should be hyphenated using the \"hyphens\" property.",
    "keywords": "hyphen,shy"
  },
  {
    "key": "css-image-orientation",
    "title": "CSS3 image-orientation",
    "description": "CSS property used generally to fix the intended orientation of an image. This can be done using 90 degree increments or based on the image's EXIF data using the \"from-image\" value.",
    "keywords": "image-orientation,from-image,flip"
  },
  {
    "key": "css-image-set",
    "title": "CSS image-set",
    "description": "Method of letting the browser pick the most appropriate CSS background image from a given set, primarily for high PPI screens.",
    "keywords": ""
  },
  {
    "key": "css-in-out-of-range",
    "title": ":in-range and :out-of-range CSS pseudo-classes",
    "description": "If a temporal or number `<input>` has `max` and/or `min` attributes, then `:in-range` matches when the value is within the specified range and `:out-of-range` matches when the value is outside the specified range. If there are no range constraints, then neither pseudo-class matches.",
    "keywords": "in,out,of,range,:in-range,:out-of-range"
  },
  {
    "key": "css-indeterminate-pseudo",
    "title": ":indeterminate CSS pseudo-class",
    "description": "The `:indeterminate` pseudo-class matches indeterminate checkboxes, indeterminate `<progress>` bars, and radio buttons with no checked button in their radio button group.",
    "keywords": ":indeterminate,indeterminate"
  },
  {
    "key": "css-initial-letter",
    "title": "CSS Initial Letter",
    "description": "Method of creating an enlarged cap, including a drop or raised cap, in a robust way.",
    "keywords": "initial-letter,initial letter,letter,drop cap,dropcap"
  },
  {
    "key": "css-initial-value",
    "title": "CSS initial value",
    "description": "A CSS value that will apply a property's initial value as defined in the CSS specification that defines the property",
    "keywords": "CSS,initial,value"
  },
  {
    "key": "css-letter-spacing",
    "title": "letter-spacing CSS property",
    "description": "Controls spacing between characters of text (i.e. \"tracking\" in typographical terms). Not to be confused with kerning.",
    "keywords": "CSS,letter,spacing,tracking"
  },
  {
    "key": "css-line-clamp",
    "title": "CSS line-clamp",
    "description": "Proprietary and undocumented CSS property that will contain text to a given amount of lines when used in combination with `display: -webkit-box`. It will end with ellipsis when `text-overflow: ellipsis` is included.",
    "keywords": ""
  },
  {
    "key": "css-logical-props",
    "title": "CSS Logical Properties",
    "description": "Logical properties and values provide control of layout through logical, rather than physical, direction and dimension mappings. These properties are `writing-mode` relative equivalents of their corresponding physical properties.",
    "keywords": "block-size,border-block,border-block-color,border-block-end,border-block-end-color,border-block-end-style,border-block-end-width,border-block-start,border-block-start-color,border-block-start-style,border-block-start-width,border-block-style,border-block-width,border-end-end-radius,border-end-start-radius,border-inline,border-inline-color,border-inline-end,border-inline-end-color,border-inline-end-style,border-inline-end-width,border-inline-start,border-inline-start-color,border-inline-start-style,border-inline-start-width,border-inline-style,border-inline-width,border-start-end-radius,border-start-start-radius,inline-size,inset,inset-block,inset-block-end,inset-block-start,inset-inline,inset-inline-end,inset-inline-start,margin-block,margin-block-end,margin-block-start,margin-inline,margin-inline-end,margin-inline-start,max-block-size,max-inline-size,min-block-size,min-inline-size,padding-block,padding-block-end,padding-block-start,padding-inline,padding-inline-end,padding-inline-start,recto,verso"
  },
  {
    "key": "css-marker-pseudo",
    "title": "CSS ::marker pseudo-element",
    "description": "The `::marker` pseudo-element allows list item markers to be styled or have their content value customized.",
    "keywords": ""
  },
  {
    "key": "css-masks",
    "title": "CSS Masks",
    "description": "Method of displaying part of an element, using a selected image as a mask",
    "keywords": "clip,clip-path,clip-rule,mask,mask-border,mask-clip,mask-image,mask-mode,mask-type,css masking"
  },
  {
    "key": "css-matches-pseudo",
    "title": ":is() CSS pseudo-class",
    "description": "The `:is()` (formerly `:matches()`, formerly `:any()`) pseudo-class checks whether the element at its position in the outer selector matches any of the selectors in its selector list. It's useful syntactic sugar that allows you to avoid writing out all the combinations manually as separate selectors. The effect is similar to nesting in Sass and most other CSS preprocessors.",
    "keywords": ":is,is,:matches,matches,:any,any,:-moz-any,-moz-any,:-webkit-any,-webkit-any"
  },
  {
    "key": "css-math-functions",
    "title": "CSS math functions min(), max() and clamp()",
    "description": "More advanced mathematical expressions in addition to `calc()`",
    "keywords": ""
  },
  {
    "key": "css-media-interaction",
    "title": "Media Queries: interaction media features",
    "description": "Allows a media query to be set based on the presence and accuracy of the user's pointing device, and whether they have the ability to hover over elements on the page. This includes the `pointer`, `any-pointer`, `hover`, and `any-hover` media features.",
    "keywords": "@media,interaction,hover,any-hover,css pointer,any-pointer,pointer:coarse,pointer:fine"
  },
  {
    "key": "css-media-resolution",
    "title": "Media Queries: resolution feature",
    "description": "Allows a media query to be set based on the device pixels used per CSS unit. While the standard uses `min`/`max-resolution` for this, some browsers support the older non-standard `device-pixel-ratio` media query.",
    "keywords": "@media,device-pixel-ratio,resolution,dppx,dpcm,dpi"
  },
  {
    "key": "css-mediaqueries",
    "title": "CSS3 Media Queries",
    "description": "Method of applying styles based on media information. Includes things like page and device dimensions",
    "keywords": "@media"
  },
  {
    "key": "css-mixblendmode",
    "title": "Blending of HTML/SVG elements",
    "description": "Allows blending between arbitrary SVG and HTML elements",
    "keywords": "mix-blend-mode,css blend modes,css blending modes"
  },
  {
    "key": "css-motion-paths",
    "title": "CSS Motion Path",
    "description": "Allows elements to be animated along SVG paths or shapes via the `offset-path` property. Originally defined as the `motion-path` property.",
    "keywords": "offset-position,offset-distance,offset-rotate"
  },
  {
    "key": "css-namespaces",
    "title": "CSS namespaces",
    "description": "Using the `@namespace` at-rule, elements of other namespaces (e.g. SVG) can be targeted using the pipe (`|`) selector.",
    "keywords": ""
  },
  {
    "key": "css-not-sel-list",
    "title": "selector list argument of :not()",
    "description": "Selectors Level 4 allows the `:not()` pseudo-class to accept a list of selectors, which the element must not match any of. Selectors Level 3 only allowed `:not()` to accept a single simple selector. Thus, `:not(a):not(.b):not([c])` can instead be written as `:not(a, .b, [c])`",
    "keywords": "negation,not,pseudo,selector,selectors,list,multiple,argument,level,4"
  },
  {
    "key": "css-nth-child-of",
    "title": "selector list argument of :nth-child and :nth-last-child CSS pseudo-classes",
    "description": "The newest versions of `:nth-child()` and `:nth-last-child()` accept an optional `of S` clause which filters the children to only those which match the selector list `S`. For example, `:nth-child(1 of .foo)` selects the first child among the children that have the `foo` class (ignoring any non-`foo` children which precede that child). Similar to `:nth-of-type`, but for arbitrary selectors instead of only type selectors.",
    "keywords": "nth-child,nth-last-child,nth,child,an,b,of,s,sel,selector,list"
  },
  {
    "key": "css-opacity",
    "title": "CSS3 Opacity",
    "description": "Method of setting the transparency level of an element",
    "keywords": "transparent,transparency,alpha"
  },
  {
    "key": "css-optional-pseudo",
    "title": ":optional CSS pseudo-class",
    "description": "The `:optional` pseudo-class matches form inputs (`<input>`, `<textarea>`, `<select>`) which are not `:required`.",
    "keywords": ":optional,optional,:required,required"
  },
  {
    "key": "css-overflow",
    "title": "CSS overflow property",
    "description": "Originally a single property for controlling overflowing content in both horizontal & vertical directions, the `overflow` property is now a shorthand for `overflow-x` & `overflow-y`. The latest version of the specification also introduces the `clip` value that blocks programmatic scrolling.",
    "keywords": "overflow:hidden,overflow:scroll,overflow:clip"
  },
  {
    "key": "css-overflow-anchor",
    "title": "CSS overflow-anchor (Scroll Anchoring)",
    "description": "Changes in DOM elements above the visible region of a scrolling box can result in the page moving while the user is in the middle of consuming the content.\r\nBy default, the value of  `overflow-anchor` is `auto`, it can mitigate this jarring user experience by keeping track of the position of an anchor node and adjusting the scroll offset accordingly",
    "keywords": "overflow-anchor,scroll anchoring"
  },
  {
    "key": "css-overscroll-behavior",
    "title": "CSS overscroll-behavior",
    "description": "CSS property to control the behavior when the scroll position of a scroll container reaches the edge of the scrollport.",
    "keywords": "scroll-boundary-behavior,overscroll-behavior-x,overscroll-behavior-y,-ms-scroll-chaining"
  },
  {
    "key": "css-page-break",
    "title": "CSS page-break properties",
    "description": "Properties to control the way elements are broken across (printed) pages.",
    "keywords": "page-break-before,page-break-after,page-break-inside,always,avoid"
  },
  {
    "key": "css-paged-media",
    "title": "CSS Paged Media (@page)",
    "description": "CSS at-rule (`@page`) to define page-specific rules when printing web pages, such as margin per page and page dimensions.",
    "keywords": ""
  },
  {
    "key": "css-paint-api",
    "title": "CSS Paint API",
    "description": "Allows programmatic generation of images used by CSS",
    "keywords": "houdini"
  },
  {
    "key": "css-placeholder",
    "title": "::placeholder CSS pseudo-element",
    "description": "The ::placeholder pseudo-element represents placeholder text in an input field: text that represents the input and provides a hint to the user on how to fill out the form. For example, a date-input field might have the placeholder text `YYYY-MM-DD` to clarify that numeric dates are to be entered in year-month-day order.",
    "keywords": "::placeholder,placeholder"
  },
  {
    "key": "css-placeholder-shown",
    "title": ":placeholder-shown CSS pseudo-class",
    "description": "Input elements can sometimes show placeholder text as a hint to the user on what to type in. See, for example, the placeholder attribute in HTML5. The :placeholder-shown pseudo-class matches an input element that is showing such placeholder text.",
    "keywords": ":placeholder-shown,placeholder-shown,placeholder"
  },
  {
    "key": "css-read-only-write",
    "title": "CSS :read-only and :read-write selectors",
    "description": ":read-only and :read-write pseudo-classes to match elements which are considered user-alterable",
    "keywords": "css,selector,read-only,read-write"
  },
  {
    "key": "css-rebeccapurple",
    "title": "Rebeccapurple color",
    "description": "The new color added in CSS Color Module Level 4",
    "keywords": "rebeccapurple,beccapurple"
  },
  {
    "key": "css-reflections",
    "title": "CSS Reflections",
    "description": "Method of displaying a reflection of an element",
    "keywords": "box-reflect"
  },
  {
    "key": "css-regions",
    "title": "CSS Regions",
    "description": "Method of flowing content into multiple elements.",
    "keywords": ""
  },
  {
    "key": "css-repeating-gradients",
    "title": "CSS Repeating Gradients",
    "description": "Method of defining a repeating linear or radial color gradient as a CSS image.",
    "keywords": "repeating-linear-gradient,repeating-radial-gradient"
  },
  {
    "key": "css-resize",
    "title": "CSS resize property",
    "description": "Method of allowing an element to be resized by the user, with options to limit to a given direction. ",
    "keywords": "horizontal,vertical"
  },
  {
    "key": "css-revert-value",
    "title": "CSS revert value",
    "description": "A CSS keyword value that resets a property's value to the default specified by the browser in its UA stylesheet, as if the webpage had not included any CSS. For example, `display:revert` on a `<div>` would result in `display:block`. This is in contrast to the `initial` value, which is simply defined on a per-property basis, and for `display` would be `inline`.",
    "keywords": "CSS,reset,value"
  },
  {
    "key": "css-rrggbbaa",
    "title": "#rrggbbaa hex color notation",
    "description": "The CSS Color Module Level 4 defines new 4 & 8 character hex notation for color to include the opacity level.",
    "keywords": "rgba, rrggbbaa, color"
  },
  {
    "key": "css-scroll-behavior",
    "title": "CSSOM Scroll-behavior",
    "description": "Method of specifying the scrolling behavior for a scrolling box, when scrolling happens due to navigation or CSSOM scrolling APIs.",
    "keywords": "smooth,scroll,cssom,scroll-behavior"
  },
  {
    "key": "css-scrollbar",
    "title": "CSS scrollbar styling",
    "description": "Methods of styling scrollbars' color and width.",
    "keywords": "scrollbar-button,scrollbar-track,scrollbar-thumb,scrollbar-base-color,scrollbar-face-color,scrollbar-color,scrollbar-width"
  },
  {
    "key": "css-sel2",
    "title": "CSS 2.1 selectors",
    "description": "Basic CSS selectors including: `*` (universal selector), `>` (child selector), `:first-child`, `:link`, `:visited`, `:active`, `:hover`, `:focus`, `:lang()`, `+` (adjacent sibling selector), `[attr]`, `[attr=\"val\"]`, `[attr~=\"val\"]`, `[attr|=\"bar\"]`, `.foo` (class selector), `#foo` (id selector)",
    "keywords": "attribute selector"
  },
  {
    "key": "css-sel3",
    "title": "CSS3 selectors",
    "description": "Advanced element selection using selectors including: `[foo^=\"bar\"]`, `[foo$=\"bar\"]`, `[foo*=\"bar\"]`, `:root`, `:nth-child()`,  `:nth-last-child()`, `:nth-of-type()`, `:nth-last-of-type()`, `:last-child`, `:first-of-type`, `:last-of-type`, `:only-child`, `:only-of-type`, `:empty`, `:target`, `:enabled`, `:disabled`, `:checked`, `:not()`, `~` (general sibling)",
    "keywords": ""
  },
  {
    "key": "css-selection",
    "title": "::selection CSS pseudo-element",
    "description": "The ::selection CSS pseudo-element applies rules to the portion of a document that has been highlighted (e.g., selected with the mouse or another pointing device) by the user.",
    "keywords": "::selection,selection"
  },
  {
    "key": "css-shapes",
    "title": "CSS Shapes Level 1",
    "description": "Allows geometric shapes to be set in CSS to define an area for text to flow around. Includes properties `shape-outside`, `shape-margin` and `shape-image-threshold`",
    "keywords": "circle,ellipse,polygon,inset,shape-outside,shape-margin,shape-image-threshold"
  },
  {
    "key": "css-snappoints",
    "title": "CSS Scroll Snap",
    "description": "CSS technique that allows customizable scrolling experiences like pagination of carousels by setting defined snap positions.",
    "keywords": "scroll-margin,scroll-snap-points-x,scroll-snap-points-y,scroll-snap-type,scroll-snap-destination,scroll-snap-coordinate,scroll-snap-margin,scroll-snap-align"
  },
  {
    "key": "css-sticky",
    "title": "CSS position:sticky",
    "description": "Keeps elements positioned as \"fixed\" or \"relative\" depending on how it appears in the viewport. As a result the element is \"stuck\" when necessary while scrolling.",
    "keywords": ""
  },
  {
    "key": "css-subgrid",
    "title": "CSS Subgrid",
    "description": "Feature of the CSS Grid Layout Module Level 2 that allows a grid-item with its own grid to align in one or both dimensions with its parent grid.",
    "keywords": "grid-template-columns:subgrid,grid-template-rows:subgrid"
  },
  {
    "key": "css-supports-api",
    "title": "CSS.supports() API",
    "description": "The CSS.supports() static methods returns a Boolean value indicating if the browser supports a given CSS feature, or not.",
    "keywords": "conditional"
  },
  {
    "key": "css-table",
    "title": "CSS Table display",
    "description": "Method of displaying elements as tables, rows, and cells. Includes support for all `display: table-*` properties as well as `display: inline-table`",
    "keywords": "display:table,table-cell,table-row,table-layout"
  },
  {
    "key": "css-text-align-last",
    "title": "CSS3 text-align-last",
    "description": "CSS property to describe how the last line of a block or a line right before a forced line break when `text-align` is `justify`.",
    "keywords": "text align last"
  },
  {
    "key": "css-text-indent",
    "title": "CSS text-indent",
    "description": "The `text-indent` property applies indentation to lines of inline content in a block.",
    "keywords": "each-line,hanging"
  },
  {
    "key": "css-text-justify",
    "title": "CSS text-justify",
    "description": "CSS property to define how text should be justified when `text-align: justify` is set.",
    "keywords": ""
  },
  {
    "key": "css-text-orientation",
    "title": "CSS text-orientation",
    "description": "The CSS `text-orientation` property specifies the orientation of text within a line. Current values only have an effect in vertical typographic modes (defined with the `writing-mode` property)",
    "keywords": ""
  },
  {
    "key": "css-textshadow",
    "title": "CSS3 Text-shadow",
    "description": "Method of applying one or more shadow or blur effects to text",
    "keywords": "text shadow"
  },
  {
    "key": "css-touch-action",
    "title": "CSS touch-action property",
    "description": "touch-action is a CSS property that controls filtering of gesture events, providing developers with a declarative mechanism to selectively disable touch scrolling (in one or both axes) or double-tap-zooming.",
    "keywords": "touch action"
  },
  {
    "key": "css-transitions",
    "title": "CSS3 Transitions",
    "description": "Simple method of animating certain properties of an element, with ability to define property, duration, delay and timing function. ",
    "keywords": "css transition,transitionend,transition-property,transition-duration,transition-timing-function,transition-delay,steps,step-start,step-end,cubic-bezier"
  },
  {
    "key": "css-unset-value",
    "title": "CSS unset value",
    "description": "A CSS value that's the same as \"inherit\" if a property is inherited or \"initial\" if a property is not inherited.",
    "keywords": "CSS,unset,value"
  },
  {
    "key": "css-variables",
    "title": "CSS Variables (Custom Properties)",
    "description": "Permits the declaration and usage of cascading variables in stylesheets.",
    "keywords": "css variables,custom properties,var(),--var"
  },
  {
    "key": "css-widows-orphans",
    "title": "CSS widows & orphans",
    "description": "CSS properties to control when lines break across pages or columns by defining the amount of lines that must be left before or after the break.",
    "keywords": ""
  },
  {
    "key": "css-writing-mode",
    "title": "CSS writing-mode property",
    "description": "Property to define whether lines of text are laid out horizontally or vertically and the direction in which blocks progress.",
    "keywords": "css,writing,direction,i18n,vertical,ltr,rtl"
  },
  {
    "key": "css-zoom",
    "title": "CSS zoom",
    "description": "Non-standard method of scaling content.",
    "keywords": "-ms-zoom,transform,-moz-transform,-ms-transform,-webkit-transform,-o-transform,scale,css-transforms"
  },
  {
    "key": "css3-attr",
    "title": "CSS3 attr() function for all properties",
    "description": "While `attr()` is supported for effectively all browsers for the `content` property, CSS Values and Units Level 3 adds the ability to use `attr()` on **any** CSS property, and to use it for non-string values (e.g. numbers, colors).",
    "keywords": "attr,attribute,function"
  },
  {
    "key": "css3-boxsizing",
    "title": "CSS3 Box-sizing",
    "description": "Method of specifying whether or not an element's borders and padding should be included in size units",
    "keywords": "border-box,content-box"
  },
  {
    "key": "css3-colors",
    "title": "CSS3 Colors",
    "description": "Method of describing colors using Hue, Saturation and Lightness (hsl()) rather than just RGB, as well as allowing alpha-transparency with rgba() and hsla().",
    "keywords": "rgb,hsl,rgba,hsla"
  },
  {
    "key": "css3-cursors",
    "title": "CSS3 Cursors (original values)",
    "description": "CSS3 cursor values added in the 2004 spec, including none, context-menu, cell, vertical-text, alias, copy, no-drop, not-allowed, nesw-resize, nwse-resize, col-resize, row-resize and all-scroll. ",
    "keywords": "cursors, pointers"
  },
  {
    "key": "css3-cursors-grab",
    "title": "CSS grab & grabbing cursors",
    "description": "Support for the `grab` & `grabbing` values for the `cursor` property. Used to indicate that something can be grabbed (dragged to be moved).",
    "keywords": ""
  },
  {
    "key": "css3-cursors-newer",
    "title": "CSS3 Cursors: zoom-in & zoom-out",
    "description": "Support for `zoom-in`, `zoom-out` values for the CSS3 `cursor` property.",
    "keywords": "cursors, pointers"
  },
  {
    "key": "css3-tabsize",
    "title": "CSS3 tab-size",
    "description": "Method of customizing the width of the tab character. Only effective using 'white-space: pre' or 'white-space: pre-wrap'.",
    "keywords": "tab-size,tab-width"
  },
  {
    "key": "currentcolor",
    "title": "CSS currentColor value",
    "description": "A CSS value that will apply the existing `color` value to other properties like `background-color`, etc. ",
    "keywords": ""
  },
  {
    "key": "custom-elements",
    "title": "Custom Elements (deprecated V0 spec)",
    "description": "Original V0 version of the custom elements specification. See [Custom Elements V1](#feat=custom-elementsv1) for support for the latest version. ",
    "keywords": "document.registerElement"
  },
  {
    "key": "custom-elementsv1",
    "title": "Custom Elements (V1)",
    "description": "Method of defining new HTML tags.",
    "keywords": "webcomponents,customelements"
  },
  {
    "key": "customevent",
    "title": "CustomEvent",
    "description": "A DOM event interface that can carry custom application-defined data.",
    "keywords": "custom events,custom,event"
  },
  {
    "key": "datalist",
    "title": "Datalist element",
    "description": "Method of setting a list of options for a user to select in a text field, while leaving the ability to enter a custom value.",
    "keywords": "list attribute,input"
  },
  {
    "key": "dataset",
    "title": "dataset & data-* attributes",
    "description": "Method of applying and accessing custom data to elements.",
    "keywords": "DOMStringMap"
  },
  {
    "key": "datauri",
    "title": "Data URIs",
    "description": "Method of embedding images and other files in webpages as a string of text, generally using base64 encoding.",
    "keywords": "data url,datauris,data uri,dataurl,dataurls,base64"
  },
  {
    "key": "date-tolocaledatestring",
    "title": "Date.prototype.toLocaleDateString",
    "description": "Date method to generate a language sensitive representation of a given date, formatted based on a specified locale and options.",
    "keywords": ""
  },
  {
    "key": "details",
    "title": "Details & Summary elements",
    "description": "The <details> element generates a simple no-JavaScript widget to show/hide element contents, optionally by clicking on its child <summary> element.",
    "keywords": ""
  },
  {
    "key": "deviceorientation",
    "title": "DeviceOrientation & DeviceMotion events",
    "description": "API for detecting orientation and motion events from the device running the browser.",
    "keywords": "ondeviceorientation,ondevicemotion"
  },
  {
    "key": "devicepixelratio",
    "title": "Window.devicePixelRatio",
    "description": "Read-only property that returns the ratio of the (vertical) size of one physical pixel on the current display device to the size of one CSS pixel.",
    "keywords": "device,pixel,ratio,size"
  },
  {
    "key": "dialog",
    "title": "Dialog element",
    "description": "Method of easily creating custom dialog boxes to display to the user with modal or non-modal options. Also includes a `::backdrop` pseudo-element for behind the element.",
    "keywords": "HTMLDialogElement,showModal,backdrop"
  },
  {
    "key": "dispatchevent",
    "title": "EventTarget.dispatchEvent",
    "description": "Method to programmatically trigger a DOM event.",
    "keywords": "dispatch,event,target,fire,trigger,dom"
  },
  {
    "key": "dnssec",
    "title": "DNSSEC and DANE",
    "description": "Method of validating a DNS response against a trusted root server. Mitigates various attacks that could reroute a user to a fake site while showing the real URL for the original site.",
    "keywords": "DNS Security Extensions,Domain Name System Security Extensions,DNS based Authentication of Named Entities"
  },
  {
    "key": "do-not-track",
    "title": "Do Not Track API",
    "description": "Allows the browser's Do Not Track setting to be queried via `navigator.doNotTrack`.",
    "keywords": "DNT"
  },
  {
    "key": "document-currentscript",
    "title": "document.currentScript",
    "description": "`document.currentScript` returns the `<script>` element whose script is currently being processed.",
    "keywords": ""
  },
  {
    "key": "document-evaluate-xpath",
    "title": "document.evaluate & XPath",
    "description": "Allow nodes in an XML/HTML document to be traversed using XPath expressions. ",
    "keywords": "dom l3 xpath,dom level 3"
  },
  {
    "key": "document-execcommand",
    "title": "Document.execCommand()",
    "description": "Allows running commands to manipulate the contents of an editable region in a document switched to designMode",
    "keywords": "document,text,editor,commands,designMode"
  },
  {
    "key": "document-scrollingelement",
    "title": "document.scrollingElement",
    "description": "`document.scrollingElement` refers to the element that scrolls the document.",
    "keywords": ""
  },
  {
    "key": "documenthead",
    "title": "document.head",
    "description": "Convenience property for accessing the `<head>` element",
    "keywords": "document,head"
  },
  {
    "key": "dom-manip-convenience",
    "title": "DOM manipulation convenience methods",
    "description": "jQuery-like methods on DOM nodes to insert nodes around or within a node, or to replace one node with another. These methods accept any number of DOM nodes or HTML strings as arguments. Includes: `ChildNode.before`, `ChildNode.after`, `ChildNode.replaceWith`, `ParentNode.prepend`, and `ParentNode.append`.",
    "keywords": "dom,manipulation,convenience,convenient,before,after,replaceWith,prepend,append"
  },
  {
    "key": "dom-range",
    "title": "Document Object Model Range",
    "description": "A contiguous range of content in a Document, DocumentFragment or Attr",
    "keywords": "DOM,range,selection"
  },
  {
    "key": "domcontentloaded",
    "title": "DOMContentLoaded",
    "description": "JavaScript event that fires when the DOM is loaded, but before all page assets are loaded (CSS, images, etc.).",
    "keywords": "dom,domready,onload,contentloaded,document"
  },
  {
    "key": "dommatrix",
    "title": "DOMMatrix",
    "description": "The `DOMMatrix` interface represents 4x4 matrices, suitable for 2D and 3D operations. Supersedes the `WebKitCSSMatrix` and `SVGMatrix` interfaces.",
    "keywords": "matrix,WebKitCSSMatrix,MSCSSMatrix,CSSMatrix,DOMMatrix,DOMMatrixReadOnly"
  },
  {
    "key": "download",
    "title": "Download attribute",
    "description": "When used on an anchor, this attribute signifies that the browser should download the resource the anchor points to rather than navigate to it.",
    "keywords": "download,a.download,a[download],download attribute"
  },
  {
    "key": "dragndrop",
    "title": "Drag and Drop",
    "description": "Method of easily dragging and dropping elements on a page, requiring minimal JavaScript.",
    "keywords": "draganddrop, draggable"
  },
  {
    "key": "element-closest",
    "title": "Element.closest()",
    "description": "DOM method that returns the current element if it matches the given selector, or else the closest ancestor element that matches the given selector, or else null.",
    "keywords": "element,closest,dom"
  },
  {
    "key": "element-from-point",
    "title": "document.elementFromPoint()",
    "description": "Given coordinates for a point relative to the viewport, returns the element that a click event would be dispatched at if the user were to click the point (in other words, the element that hit-testing would find).",
    "keywords": "document,elementFromPoint,element,from,point"
  },
  {
    "key": "element-scroll-methods",
    "title": "Scroll methods on elements (scroll, scrollTo, scrollBy)",
    "description": "Methods to change the scroll position of an element. Similar to setting `scrollTop` & `scrollLeft` properties, but also allows options to be passed to define the scroll behavior.",
    "keywords": "element.prototype.scroll,element.prototype.scrollTo,element.prototype.scrollBy"
  },
  {
    "key": "eme",
    "title": "Encrypted Media Extensions",
    "description": "The EncryptedMediaExtenstions API provides interfaces for controlling the playback of content which is subject to a DRM scheme.",
    "keywords": "requestMediaKeySystemAccess,createMediaKeys"
  },
  {
    "key": "eot",
    "title": "EOT - Embedded OpenType fonts",
    "description": "Type of font that can be derived from a regular font, allowing small files and legal use of high-quality fonts. Usage is restricted by the file being tied to the website",
    "keywords": ""
  },
  {
    "key": "es5",
    "title": "ECMAScript 5",
    "description": "Full support for the ECMAScript 5 specification. Features include `Function.prototype.bind`, Array methods like `indexOf`, `forEach`, `map` & `filter`, Object methods like `defineProperty`, `create` & `keys`, the `trim` method on Strings and many more.",
    "keywords": "es5,javascript,js,function.bind,array.foreach,array.indexof,array.map,object.keys,date.now,defineproperties,getprototypeof,keys,seal,freeze,preventextensions,issealed,isfrozen,isextensible,getownpropertydescriptorgetownpropertynames,toisostringc,isarray,lastindexof,every,some,reduce,reduceright,getter,setter"
  },
  {
    "key": "es6",
    "title": "ECMAScript 2015 (ES6)",
    "description": "Support for the ECMAScript 2015 specification. Features include Promises, Modules, Classes, Template Literals, Arrow Functions, Let and Const, Default Parameters, Generators, Destructuring Assignment, Rest & Spread, Map/Set & WeakMap/WeakSet and many more.",
    "keywords": "javascript,block-scoped,string.prototype.includes,string.prototype.endswith,string.prototype.repeat,array.prototype.find,array.prototype.findindex,array.prototype.fill,object.assign"
  },
  {
    "key": "es6-class",
    "title": "ES6 classes",
    "description": "ES6 classes are syntactical sugar to provide a much simpler and clearer syntax to create objects and deal with inheritance.",
    "keywords": "ES6,JavaScript,class"
  },
  {
    "key": "es6-generators",
    "title": "ES6 Generators",
    "description": "ES6 Generators are special functions that can be used to control the iteration behavior of a loop. Generators are defined using a `function*` declaration.",
    "keywords": "yield,iterators"
  },
  {
    "key": "es6-module",
    "title": "JavaScript modules via script tag",
    "description": "Loading JavaScript module scripts using `<script type=\"module\">` Includes support for the `nomodule` attribute.",
    "keywords": "es6,javascript,module,import,export,nomodule"
  },
  {
    "key": "es6-module-dynamic-import",
    "title": "JavaScript modules: dynamic import()",
    "description": "Loading JavaScript modules dynamically using the import() syntax",
    "keywords": "es6,javascript,module,import,export"
  },
  {
    "key": "es6-number",
    "title": "ES6 Number",
    "description": "Extensions to the `Number` built-in object in ES6, including constant properties `EPSILON`, `MIN_SAFE_INTEGER`, and `MAX_SAFE_INTEGER`, and methods ` isFinite`, `isInteger`, `isSafeInteger`, and `isNaN`.",
    "keywords": "ES6,JavaScript,number,built-in,EPSILON,MIN_SAFE_INTEGER,MAX_SAFE_INTEGER,isFinite,isInteger,isSafeInteger,isNaN"
  },
  {
    "key": "es6-string-includes",
    "title": "String.prototype.includes",
    "description": "The includes() method determines whether one string may be found within another string, returning true or false as appropriate.",
    "keywords": "ES6,JavaScript,String,includes"
  },
  {
    "key": "eventsource",
    "title": "Server-sent events",
    "description": "Method of continuously sending data from a server to the browser, rather than repeatedly requesting it (EventSource interface, used to fall under HTML5)",
    "keywords": "serversent,s-sent-events,server sent events,server side events"
  },
  {
    "key": "extended-system-fonts",
    "title": "ui-serif, ui-sans-serif, ui-monospace and ui-rounded values for font-family",
    "description": "Allows more control when choosing system interface fonts",
    "keywords": "font-family,ui-serif,ui-sans-serif,ui-monospace,ui-rounded"
  },
  {
    "key": "feature-policy",
    "title": "Feature Policy",
    "description": "This specification defines a mechanism that allows developers to selectively enable and disable use of various browser features and APIs.",
    "keywords": "feature,security,header,allow,attribute,allow attribute,attribute allow"
  },
  {
    "key": "fetch",
    "title": "Fetch",
    "description": "A modern replacement for XMLHttpRequest.",
    "keywords": "fetch,service,workers,xhr,xmlhttprequest"
  },
  {
    "key": "fieldset-disabled",
    "title": "disabled attribute of the fieldset element",
    "description": "Allows disabling all of the form control descendants of a fieldset via a `disabled` attribute on the fieldset element itself.",
    "keywords": "HTMLFieldSetElement,fieldset,disabled"
  },
  {
    "key": "fileapi",
    "title": "File API",
    "description": "Method of manipulating file objects in web applications client-side, as well as programmatically selecting them and accessing their data.",
    "keywords": "FileReader"
  },
  {
    "key": "filereader",
    "title": "FileReader API",
    "description": "Method of reading the contents of a File or Blob object into memory",
    "keywords": ""
  },
  {
    "key": "filereadersync",
    "title": "FileReaderSync",
    "description": "Allows files to be read synchronously in Web Workers",
    "keywords": ""
  },
  {
    "key": "filesystem",
    "title": "Filesystem & FileWriter API",
    "description": "Method of reading and writing files to a sandboxed file system.",
    "keywords": "filewriter,requestFileSystem"
  },
  {
    "key": "flac",
    "title": "FLAC audio format",
    "description": "Popular lossless audio compression format",
    "keywords": "flac,lossless,audio"
  },
  {
    "key": "flexbox",
    "title": "CSS Flexible Box Layout Module",
    "description": "Method of positioning elements in horizontal or vertical stacks. Support includes all properties prefixed with `flex`, as well as `display: flex`, `display: inline-flex`, `align-content`, `align-items`, `align-self`, `justify-content` and `order`.",
    "keywords": "flex-box,flex-direction,flex-wrap,flex-flow,flex-grow,flex-shrink,flex-basis,display:flex,justify-content:space-between,justify-content:space-around,align-content:space-between,align-content:space-around,space-between"
  },
  {
    "key": "flexbox-gap",
    "title": "gap property for Flexbox",
    "description": "`gap` for flexbox containers to create gaps/gutters between flex items",
    "keywords": "flexbox,gaps,gutters,row-gap,column-gap"
  },
  {
    "key": "flow-root",
    "title": "display: flow-root",
    "description": "The element generates a block container box, and lays out its contents using flow layout. It always establishes a new block formatting context for its contents. It provides a better solution to the most use cases of the \"clearfix\" hack.",
    "keywords": "display,flow-root"
  },
  {
    "key": "focusin-focusout-events",
    "title": "focusin & focusout events",
    "description": "The `focusin` and `focusout` events fire just before the element gains or loses focus, and they bubble. By contrast, the `focus` and `blur` events fire after the focus has shifted, and don't bubble.",
    "keywords": "focusin,focusout,focus,event"
  },
  {
    "key": "font-family-system-ui",
    "title": "system-ui value for font-family",
    "description": "Value for `font-family` that represents the default user interface font.",
    "keywords": ""
  },
  {
    "key": "font-feature",
    "title": "CSS font-feature-settings",
    "description": "Method of applying advanced typographic and language-specific font features to supported OpenType fonts.",
    "keywords": "font-feature,font-feature-settings,kern,kerning,font-variant-alternates,ligatures,font-variant-ligatures"
  },
  {
    "key": "font-kerning",
    "title": "CSS3 font-kerning",
    "description": "Controls the usage of the kerning information (spacing between letters) stored in the font. Note that this only affects OpenType fonts with kerning information, it has no effect on other fonts.",
    "keywords": ""
  },
  {
    "key": "font-loading",
    "title": "CSS Font Loading",
    "description": "This CSS module defines a scripting interface to font faces in CSS, allowing font faces to be easily created and loaded from script. It also provides methods to track the loading status of an individual font, or of all the fonts on an entire page.",
    "keywords": "fontface,fontfaceset,fontfacesource,document.fonts"
  },
  {
    "key": "font-size-adjust",
    "title": "CSS font-size-adjust",
    "description": "Method of adjusting the font size in a matter that relates to the height of lowercase vs. uppercase letters. This makes it easier to set the size of fallback fonts.",
    "keywords": ""
  },
  {
    "key": "font-smooth",
    "title": "CSS font-smooth",
    "description": "Controls the application of anti-aliasing when fonts are rendered.",
    "keywords": "font smooth,font smoothing,-webkit-font-smoothing,-moz-osx-font-smoothing"
  },
  {
    "key": "font-unicode-range",
    "title": "Font unicode-range subsetting",
    "description": "This @font-face descriptor defines the set of Unicode codepoints that may be supported by the font face for which it is declared. The descriptor value is a comma-delimited list of Unicode range (<urange>) values. The union of these ranges defines the set of codepoints that serves as a hint for user agents when deciding whether or not to download a font resource for a given text run.",
    "keywords": "font face,unicode,unicode-range"
  },
  {
    "key": "font-variant-alternates",
    "title": "CSS font-variant-alternates",
    "description": "Controls the usage of alternate glyphs associated to alternative names defined in @font-feature-values for certain types of OpenType fonts.",
    "keywords": "font-feature,font-feature-settings,font-variant"
  },
  {
    "key": "font-variant-numeric",
    "title": "CSS font-variant-numeric",
    "description": "CSS property that provides different ways of displaying numbers, fractions, and ordinal markers.",
    "keywords": "normal,ordinal,slashed-zero,lining-nums,oldstyle-nums,proportional-nums,tabular-nums,diagonal-fractions,stacked-fractions,oldstyle-nums,stacked-fractions"
  },
  {
    "key": "fontface",
    "title": "@font-face Web fonts",
    "description": "Method of displaying fonts downloaded from websites",
    "keywords": "font face"
  },
  {
    "key": "form-attribute",
    "title": "Form attribute",
    "description": "Attribute for associating input and submit buttons with a form.",
    "keywords": "form,attribute"
  },
  {
    "key": "form-submit-attributes",
    "title": "Attributes for form submission",
    "description": "Attributes for form submission that may be specified on submit buttons. The attributes are: `formaction`, `formenctype`, `formmethod`, `formnovalidate`, and `formtarget`",
    "keywords": ""
  },
  {
    "key": "form-validation",
    "title": "Form validation",
    "description": "Method of setting required fields and field types without requiring JavaScript. This includes preventing forms from being submitted when appropriate, the `checkValidity()` method as well as support for the `:invalid`, `:valid`, and `:required` CSS pseudo-classes.",
    "keywords": ""
  },
  {
    "key": "forms",
    "title": "HTML5 form features",
    "description": "Expanded form options, including things like date pickers, sliders, validation, placeholders and multiple file uploads. Previously known as \"Web forms 2.0\".",
    "keywords": "input,datepicker"
  },
  {
    "key": "fullscreen",
    "title": "Full Screen API",
    "description": "API for allowing content (like a video or canvas element) to take up the entire screen.",
    "keywords": "full-screen,requestFullScreen,exitFullScreen"
  },
  {
    "key": "gamepad",
    "title": "Gamepad API",
    "description": "API to support input from USB gamepad controllers through JavaScript.",
    "keywords": ""
  },
  {
    "key": "geolocation",
    "title": "Geolocation",
    "description": "Method of informing a website of the user's geographical location",
    "keywords": ""
  },
  {
    "key": "getboundingclientrect",
    "title": "Element.getBoundingClientRect()",
    "description": "Method to get the size and position of an element's bounding box, relative to the viewport.",
    "keywords": "getBoundingClientRect,bounding,client,rect,DOMRect,box,cssom"
  },
  {
    "key": "getcomputedstyle",
    "title": "getComputedStyle",
    "description": "API to get the current computed CSS styles applied to an element. This may be the current value applied by an animation or as set by a stylesheet.",
    "keywords": ""
  },
  {
    "key": "getelementsbyclassname",
    "title": "getElementsByClassName",
    "description": "Method of accessing DOM elements by class name",
    "keywords": "byclassname"
  },
  {
    "key": "getrandomvalues",
    "title": "crypto.getRandomValues()",
    "description": "Method of generating cryptographically random values.",
    "keywords": ""
  },
  {
    "key": "gyroscope",
    "title": "Gyroscope",
    "description": "Defines a concrete sensor interface to monitor the rate of rotation around the device’s local three primary axes.",
    "keywords": ""
  },
  {
    "key": "hardwareconcurrency",
    "title": "navigator.hardwareConcurrency",
    "description": "Returns the number of logical cores of the user's CPU. The value may be reduced to prevent device fingerprinting or because it exceeds the allowed number of simultaneous web workers.",
    "keywords": "navigator,cores,hardware,concurrency,hardwareConcurrency"
  },
  {
    "key": "hashchange",
    "title": "Hashchange event",
    "description": "Event triggered in JavaScript when the URL's hash has changed (for example: page.html#foo to page.html#bar) ",
    "keywords": "onhashchange,HashChangeEvent"
  },
  {
    "key": "heif",
    "title": "HEIF/ISO Base Media File Format",
    "description": "HEIF (High Efficiency Image File Format) is a standard developed by the Moving Picture Experts Group (MPEG) for storage and sharing of images and image sequences. Can use `.heif` or `.heic` file extensions.",
    "keywords": "heic"
  },
  {
    "key": "hevc",
    "title": "HEVC/H.265 video format",
    "description": "The High Efficiency Video Coding (HEVC) compression standard is a video compression format intended to succeed H.264",
    "keywords": "h265"
  },
  {
    "key": "hidden",
    "title": "hidden attribute",
    "description": "The `hidden` attribute may be applied to any element, and effectively hides elements similar to `display: none` in CSS.",
    "keywords": ""
  },
  {
    "key": "high-resolution-time",
    "title": "High Resolution Time API",
    "description": "Method to provide the current time in sub-millisecond resolution and such that it is not subject to system clock skew or adjustments. Called using `performance.now()`",
    "keywords": "performance,now,testing"
  },
  {
    "key": "history",
    "title": "Session history management",
    "description": "Method of manipulating the user's browser's session history in JavaScript using `history.pushState`, `history.replaceState` and the `popstate` event.",
    "keywords": "onpushstate,onreplacestate"
  },
  {
    "key": "html-media-capture",
    "title": "HTML Media Capture",
    "description": "Facilitates user access to a device's media capture mechanism, such as a camera, or microphone, from within a file upload control.",
    "keywords": "htmlmediacapture, html media capture, media capture, mediacapture"
  },
  {
    "key": "html5semantic",
    "title": "HTML5 semantic elements",
    "description": "HTML5 offers some new elements, primarily for semantic purposes. The elements include: `section`, `article`, `aside`, `header`, `footer`, `nav`, `figure`, `figcaption`, `time`, `mark` & `main`.",
    "keywords": "section,article,aside,header,footer,nav,figure,figcaption,time,mark,main,<section>,<article>,<aside>,<header>,<footer>,<nav>,<figure>,<figcaption>,<time>,<mark>,<main>"
  },
  {
    "key": "http-live-streaming",
    "title": "HTTP Live Streaming (HLS)",
    "description": "HTTP-based media streaming communications protocol",
    "keywords": "apple http live streaming,m3u8"
  },
  {
    "key": "http2",
    "title": "HTTP/2 protocol",
    "description": "Networking protocol for low-latency transport of content over the web. Originally started out from the SPDY protocol, now standardized as HTTP version 2.",
    "keywords": "https/2"
  },
  {
    "key": "http3",
    "title": "HTTP/3 protocol",
    "description": "Upcoming version of the HTTP networking protocol, which is currently a draft. Previously known as HTTP-over-QUIC. Uses QUIC as its transport layer protocol.",
    "keywords": "https/3"
  },
  {
    "key": "iframe-sandbox",
    "title": "sandbox attribute for iframes",
    "description": "Method of running external site pages with reduced privileges (e.g. no JavaScript) in iframes.",
    "keywords": ""
  },
  {
    "key": "iframe-seamless",
    "title": "seamless attribute for iframes",
    "description": "The seamless attribute makes an iframe's contents actually part of a page, and adopts the styles from its hosting page. The attribute has been removed from both [the WHATWG](https://github.com/whatwg/html/issues/331) and [the W3C](https://github.com/w3c/html/pull/325) HTML5 specifications.",
    "keywords": ""
  },
  {
    "key": "iframe-srcdoc",
    "title": "srcdoc attribute for iframes",
    "description": "Override the content specified in the `src` attribute (if present) with HTML content within the attribute.",
    "keywords": ""
  },
  {
    "key": "ime",
    "title": "Input Method Editor API",
    "description": "Provides scripted access to the Input Method Editor (IME). An IME is often used to input characters from East Asian languages by typing roman characters and selecting from the resulting suggestions.",
    "keywords": "ime,cjk,input,internationalization,inputMethodContext,candidatewindow,composition"
  },
  {
    "key": "img-naturalwidth-naturalheight",
    "title": "naturalWidth & naturalHeight image properties",
    "description": "Properties defining the intrinsic width and height of the image, rather than the displayed width & height.",
    "keywords": ""
  },
  {
    "key": "imports",
    "title": "HTML Imports",
    "description": "Deprecated method of including and reusing HTML documents in other HTML documents. Superseded by ES modules.",
    "keywords": "webcomponents"
  },
  {
    "key": "indeterminate-checkbox",
    "title": "indeterminate checkbox",
    "description": "Indeterminate checkboxes are displayed in a state which is distinct both from being checked or being unchecked. They are commonly used in hierarchical checkboxes to indicate that only some of the checkbox's descendants are checked.",
    "keywords": ""
  },
  {
    "key": "indexeddb",
    "title": "IndexedDB",
    "description": "Method of storing data client-side, allows indexed database queries.",
    "keywords": "indexdb"
  },
  {
    "key": "indexeddb2",
    "title": "IndexedDB 2.0",
    "description": "Improvements to Indexed DB, including getAll(), renaming stores and indexes, and binary keys.",
    "keywords": "indexdb,indexeddb,idb"
  },
  {
    "key": "inline-block",
    "title": "CSS inline-block",
    "description": "Method of displaying an element as a block while flowing it with text. ",
    "keywords": "inlineblock,display:inline-block"
  },
  {
    "key": "innertext",
    "title": "HTMLElement.innerText",
    "description": "A property representing the text within a DOM element and its descendants. As a getter, it approximates the text the user would get if they highlighted the contents of the element with the cursor and then copied to the clipboard.",
    "keywords": "inner,text,content"
  },
  {
    "key": "input-autocomplete-onoff",
    "title": "autocomplete attribute: on & off values",
    "description": "The `autocomplete` attribute for `input` elements indicates to the browser whether a value should or should not be autofilled when appropriate.",
    "keywords": ""
  },
  {
    "key": "input-color",
    "title": "Color input type",
    "description": "Form field allowing the user to select a color.",
    "keywords": "colour,input type=\"color\""
  },
  {
    "key": "input-datetime",
    "title": "Date and time input types",
    "description": "Form field widgets to easily allow users to enter a date, time or both, generally by using a calendar/time input widget. Refers to supporting the following input types: `date`, `time`, `datetime-local`, `month` & `week`.",
    "keywords": "datepicker,timepicker,input type=\"date\",input type=\"time\",input date,datetime-local"
  },
  {
    "key": "input-email-tel-url",
    "title": "Email, telephone & URL input types",
    "description": "Text input fields intended for email addresses, telephone numbers or URLs. Particularly useful in combination with [form validation](https://caniuse.com/#feat=form-validation)",
    "keywords": "input[type=email],input[type=tel],input[type=url],input type=\"email\",input type=\"tel\",input type=\"url\""
  },
  {
    "key": "input-event",
    "title": "input event",
    "description": "The `input` event is fired when the user changes the value of an `<input>` element, `<select>` element, or `<textarea>` element. By contrast, the \"change\" event usually only fires after the form control has lost focus.",
    "keywords": "oninput"
  },
  {
    "key": "input-file-accept",
    "title": "accept attribute for file input",
    "description": "Allows a filter to be defined for what type of files a user may pick with from an `<input type=\"file\">` dialog",
    "keywords": ""
  },
  {
    "key": "input-file-directory",
    "title": "Directory selection from file input",
    "description": "The `webkitdirectory` attribute on the `<input type=\"file\">` element allows entire directory with file contents (and any subdirectories) to be selected.",
    "keywords": "mozdirectory,webkitRelativePath"
  },
  {
    "key": "input-file-multiple",
    "title": "Multiple file selection",
    "description": "Allows users to select multiple files in the file picker.",
    "keywords": ""
  },
  {
    "key": "input-inputmode",
    "title": "inputmode attribute",
    "description": "The `inputmode` attribute specifies what kind of input mechanism would be most helpful for users entering content into the form control.",
    "keywords": ""
  },
  {
    "key": "input-minlength",
    "title": "Minimum length attribute for input fields",
    "description": "Declares a lower bound on the number of characters a user can input.",
    "keywords": ""
  },
  {
    "key": "input-number",
    "title": "Number input type",
    "description": "Form field type for numbers.",
    "keywords": "spinner,input type=\"number\""
  },
  {
    "key": "input-pattern",
    "title": "Pattern attribute for input fields",
    "description": "Allows validation of an input field based on a given regular expression pattern.",
    "keywords": ""
  },
  {
    "key": "input-placeholder",
    "title": "input placeholder attribute",
    "description": "Method of setting placeholder text for text-like input fields, to suggest the expected inserted information.",
    "keywords": ""
  },
  {
    "key": "input-range",
    "title": "Range input type",
    "description": "Form field type that allows the user to select a value using a slider widget.",
    "keywords": "input type=\"range\""
  },
  {
    "key": "input-search",
    "title": "Search input type",
    "description": "Search field form input type. Intended to look like the underlying platform's native search field widget (if there is one). Other than its appearance, it's the same as an `<input type=\"text\">`.",
    "keywords": "input,type,search"
  },
  {
    "key": "input-selection",
    "title": "Selection controls for input & textarea",
    "description": "Controls for setting and getting text selection via `setSelectionRange()` and the `selectionStart` & `selectionEnd` properties.",
    "keywords": ""
  },
  {
    "key": "insert-adjacent",
    "title": "Element.insertAdjacentElement() & Element.insertAdjacentText()",
    "description": "Methods for inserting an element or text before or after a given element, or appending or prepending an element or text to a given element's list of children.",
    "keywords": "insertAdjacentElement,insertAdjacentText,insert,adjacent,element,text"
  },
  {
    "key": "insertadjacenthtml",
    "title": "Element.insertAdjacentHTML()",
    "description": "Inserts a string of HTML into a specified position in the DOM relative to the given element.",
    "keywords": "element,insert,adjacent,HTML"
  },
  {
    "key": "internationalization",
    "title": "Internationalization API",
    "description": "Locale-sensitive collation (string comparison), number formatting, and date and time formatting.",
    "keywords": "Intl,Collator,NumberFormat,DateTimeFormat"
  },
  {
    "key": "intersectionobserver",
    "title": "IntersectionObserver",
    "description": "API that can be used to understand the visibility and position of DOM elements relative to a containing element or to the top-level viewport. The position is delivered asynchronously and is useful for understanding the visibility of elements and implementing pre-loading and deferred loading of DOM content.",
    "keywords": ""
  },
  {
    "key": "intersectionobserver-v2",
    "title": "IntersectionObserver V2",
    "description": "Iteration on the original API that also reports if the element is covered by another element or has filters applied to it. Useful for blocking clickjacking attempts or tracking ad exposure.",
    "keywords": ".isVisible,isVisible"
  },
  {
    "key": "intl-pluralrules",
    "title": "Intl.PluralRules API",
    "description": "API for plural sensitive formatting and plural language rules.",
    "keywords": "Intl,PluralRules"
  },
  {
    "key": "intrinsic-width",
    "title": "Intrinsic & Extrinsic Sizing",
    "description": "Allows for the heights and widths to be specified in intrinsic values using the `max-content`, `min-content`, `fit-content` and `stretch` (formerly `fill`) properties.",
    "keywords": "fill,fill-available,max-content,min-content,fit-content,contain-floats,intrinsic,extrinsic,sizing"
  },
  {
    "key": "jpeg2000",
    "title": "JPEG 2000 image format",
    "description": "JPEG 2000 (JP2) was created by the Joint Photographic Experts Group committee in 2000 with the intention of superseding their original discrete cosine transform-based JPEG standard (created in 1992) with a newly designed, wavelet-based method. It offers some advantages in image fidelity over standard JPEG.",
    "keywords": "jp2,jpeg2000,jpeg 2000"
  },
  {
    "key": "jpegxr",
    "title": "JPEG XR image format",
    "description": "The latest JPEG image format of Joint Photographic Experts Group which boasts better compression and supports lossless compression, alpha channel, and 48-bit deep color over normal jpg format.",
    "keywords": "jpeg-xr"
  },
  {
    "key": "js-regexp-lookbehind",
    "title": "Lookbehind in JS regular expressions",
    "description": "Zero-width assertion that ensures a pattern is preceded by another pattern in a JavaScript regular expression.",
    "keywords": ""
  },
  {
    "key": "json",
    "title": "JSON parsing",
    "description": "Method of converting JavaScript objects to JSON strings and JSON back to objects using JSON.stringify() and JSON.parse()",
    "keywords": ""
  },
  {
    "key": "justify-content-space-evenly",
    "title": "CSS justify-content: space-evenly",
    "description": "The \"space-evenly\" value for the `justify-content` property distributes the space between items evenly. It is similar to space-around but provides equal instead of half-sized space on the edges. Can be used in both CSS flexbox & grid.",
    "keywords": ""
  },
  {
    "key": "kerning-pairs-ligatures",
    "title": "High-quality kerning pairs & ligatures",
    "description": "When used in HTML, the unofficial `text-rendering: optimizeLegibility` CSS property enables high-quality kerning and ligatures in certain browsers. Newer browsers have this behavior enabled by default.",
    "keywords": "optimizeLegibility,optimizeSpeed,geometricPrecision"
  },
  {
    "key": "keyboardevent-charcode",
    "title": "KeyboardEvent.charCode",
    "description": "A legacy `KeyboardEvent` property that gives the Unicode codepoint number of a character key pressed during a `keypress` event.",
    "keywords": "keyboard,event,key,char,character,code,charCode"
  },
  {
    "key": "keyboardevent-code",
    "title": "KeyboardEvent.code",
    "description": "A `KeyboardEvent` property representing the physical key that was pressed, ignoring the keyboard layout and ignoring whether any modifier keys were active.",
    "keywords": "keyboard,event,code"
  },
  {
    "key": "keyboardevent-getmodifierstate",
    "title": "KeyboardEvent.getModifierState()",
    "description": "`KeyboardEvent` method that returns the state (whether the key is pressed/locked or not) of the given modifier key.",
    "keywords": "keyboard,event,get,modifier,state"
  },
  {
    "key": "keyboardevent-key",
    "title": "KeyboardEvent.key",
    "description": "A `KeyboardEvent` property whose value is a string identifying the key that was pressed. Covers character keys, non-character keys (e.g. arrow keys), and dead keys.",
    "keywords": "keyboard,event,key"
  },
  {
    "key": "keyboardevent-location",
    "title": "KeyboardEvent.location",
    "description": "A `KeyboardEvent` property that indicates the location of the key on the input device. Useful when there are more than one physical key for the same logical key (e.g. left or right \"Control\" key; main or numpad \"1\" key).",
    "keywords": "keyboard,event,key,location,keyLocation,numpad"
  },
  {
    "key": "keyboardevent-which",
    "title": "KeyboardEvent.which",
    "description": "A legacy `KeyboardEvent` property that is equivalent to either `KeyboardEvent.keyCode` or `KeyboardEvent.charCode` depending on whether the key is alphanumeric.",
    "keywords": "keyboard,event,which"
  },
  {
    "key": "lazyload",
    "title": "Resource Hints: Lazyload",
    "description": "Gives a hint to the browser to lower the loading priority of a resource. Please note that this is a legacy attribute, see the [`loading`](https://caniuse.com/#feat=loading-lazy-attr) attribute for the new standardized API.",
    "keywords": ""
  },
  {
    "key": "let",
    "title": "let",
    "description": "Declares a variable with block level scope",
    "keywords": "ES6,variable,block,scope"
  },
  {
    "key": "link-icon-png",
    "title": "PNG favicons",
    "description": "Icon used by browsers to identify a webpage or site. While all browsers support the `.ico` format, the PNG format can be preferable.",
    "keywords": ""
  },
  {
    "key": "link-icon-svg",
    "title": "SVG favicons",
    "description": "Icon used by browsers to identify a webpage or site. While all browsers support the `.ico` format, the SVG format can be preferable to more easily support higher resolutions or larger icons.",
    "keywords": ""
  },
  {
    "key": "link-rel-dns-prefetch",
    "title": "Resource Hints: dns-prefetch",
    "description": "Gives a hint to the browser to perform a DNS lookup in the background to improve performance. This is indicated using `<link rel=\"dns-prefetch\" href=\"http://example-domain.com/\">`",
    "keywords": ""
  },
  {
    "key": "link-rel-modulepreload",
    "title": "Resource Hints: modulepreload",
    "description": "Using `<link rel=\"modulepreload\">`, browsers can be informed to prefetch module scripts without having to execute them, allowing fine-grained control over when and how module resources are loaded.",
    "keywords": ""
  },
  {
    "key": "link-rel-preconnect",
    "title": "Resource Hints: preconnect",
    "description": "Gives a hint to the browser to begin the connection handshake (DNS, TCP, TLS) in the background to improve performance. This is indicated using `<link rel=\"preconnect\" href=\"https://example-domain.com/\">`",
    "keywords": "preconnect, resource hints"
  },
  {
    "key": "link-rel-prefetch",
    "title": "Resource Hints: prefetch",
    "description": "Informs the browsers that a given resource should be prefetched so it can be loaded more quickly. This is indicated using `<link rel=\"prefetch\" href=\"(url)\">`",
    "keywords": ""
  },
  {
    "key": "link-rel-preload",
    "title": "Resource Hints: preload",
    "description": "Using `<link rel=\"preload\">`, browsers can be informed to prefetch resources without having to execute them, allowing fine-grained control over when and how resources are loaded.",
    "keywords": ""
  },
  {
    "key": "link-rel-prerender",
    "title": "Resource Hints: prerender",
    "description": "Gives a hint to the browser to render the specified page in the background, speeding up page load if the user navigates to it. This is indicated using `<link rel=\"prerender\" href=\"(url)\">`",
    "keywords": ""
  },
  {
    "key": "loading-lazy-attr",
    "title": "Lazy loading via attribute for images & iframes",
    "description": "The `loading` attributing on images & iframes gives authors control over when the browser should start loading the resource. ",
    "keywords": "lazy-loading,lazyloading,loading=\"lazy\",loading=\"eager\",loading=\"auto\",loading,attribute,lazily,lazy image loading,lazy img loading,iframe loading,native lazyload"
  },
  {
    "key": "localecompare",
    "title": "localeCompare()",
    "description": "The `localeCompare()` method returns a number indicating whether a reference string comes before or after or is the same as the given string in sort order.",
    "keywords": ""
  },
  {
    "key": "magnetometer",
    "title": "Magnetometer",
    "description": "Defines a concrete sensor interface to measure magnetic field in the X, Y and Z axis.",
    "keywords": ""
  },
  {
    "key": "matchesselector",
    "title": "matches() DOM method",
    "description": "Method of testing whether or not a DOM element matches a given selector. Formerly known (and largely supported with prefix) as matchesSelector.",
    "keywords": " matchesSelector"
  },
  {
    "key": "matchmedia",
    "title": "matchMedia",
    "description": "API for finding out whether or not a media query applies to the document.",
    "keywords": "mediaquerylist"
  },
  {
    "key": "mathml",
    "title": "MathML",
    "description": "Special tags that allow mathematical formulas and notations to be written on web pages.",
    "keywords": ""
  },
  {
    "key": "maxlength",
    "title": "maxlength attribute for input and textarea elements",
    "description": "Declares an upper bound on the number of characters the user can input. Normally the UI ignores attempts by the user to type in additional characters beyond this limit.",
    "keywords": "maximum,length,input,textarea,too,long,validity,state"
  },
  {
    "key": "media-fragments",
    "title": "Media Fragments",
    "description": "Allows only part of a resource to be shown, based on the fragment identifier in the URL. Currently support is primarily limited to video track ranges.",
    "keywords": ""
  },
  {
    "key": "mediacapture-fromelement",
    "title": "Media Capture from DOM Elements API",
    "description": "API to capture Real-Time video and audio from a DOM element, such as a `<video>`, `<audio>`, or `<canvas>` element via the `captureStream` method, in the form of a `MediaStream`",
    "keywords": "canvas,mediastream,capturestream,canvas.capturestream"
  },
  {
    "key": "mediarecorder",
    "title": "MediaRecorder API",
    "description": "The MediaRecorder API (MediaStream Recording) aims to provide a really simple mechanism by which developers can record media streams from the user's input devices and instantly use them in web apps, rather than having to perform manual encoding operations on raw PCM data, etc.",
    "keywords": ""
  },
  {
    "key": "mediasource",
    "title": "Media Source Extensions",
    "description": "API allowing media data to be accessed from HTML `video` and `audio` elements.",
    "keywords": "sourcebuffer,endofstream,mse"
  },
  {
    "key": "menu",
    "title": "Context menu item (menuitem element)",
    "description": "Method of defining a context menu item, now deprecated and [removed from the HTML specification](https://github.com/whatwg/html/issues/2730). ",
    "keywords": "contextmenu,<menuitem>,command"
  },
  {
    "key": "meta-theme-color",
    "title": "theme-color Meta Tag",
    "description": "Meta tag to define a suggested color that browsers should use to customize the display of the page or of the surrounding user interface. The meta tag overrides any theme-color set in the web app manifest.",
    "keywords": ""
  },
  {
    "key": "meter",
    "title": "meter element",
    "description": "Method of indicating the current level of a gauge.",
    "keywords": "<meter>"
  },
  {
    "key": "midi",
    "title": "Web MIDI API",
    "description": "The Web MIDI API specification defines a means for web developers to enumerate, manipulate and access MIDI devices",
    "keywords": ""
  },
  {
    "key": "minmaxwh",
    "title": "CSS min/max-width/height",
    "description": "Method of setting a minimum or maximum width or height to an element. ",
    "keywords": "min-width,min-height,max-width,max-height"
  },
  {
    "key": "mp3",
    "title": "MP3 audio format",
    "description": "Popular lossy audio compression format",
    "keywords": "mpeg"
  },
  {
    "key": "mpeg-dash",
    "title": "Dynamic Adaptive Streaming over HTTP (MPEG-DASH)",
    "description": "HTTP-based media streaming communications protocol, an alternative to HTTP Live Streaming (HLS).",
    "keywords": ""
  },
  {
    "key": "mpeg4",
    "title": "MPEG-4/H.264 video format",
    "description": "Commonly used video compression format.",
    "keywords": "avc,mp4,mpv,mov,aac,h264"
  },
  {
    "key": "multibackgrounds",
    "title": "CSS3 Multiple backgrounds",
    "description": "Method of using multiple images as a background",
    "keywords": ""
  },
  {
    "key": "multicolumn",
    "title": "CSS3 Multiple column layout",
    "description": "Method of flowing information in multiple columns",
    "keywords": "column-count,column-width,column-gap,column-rule,column-rule-type,column-span,column-fill,break-before,break-after,break-inside"
  },
  {
    "key": "mutation-events",
    "title": "Mutation events",
    "description": "Deprecated mechanism for listening to changes made to the DOM, replaced by Mutation Observers.",
    "keywords": "DOMAttrModified,DOMCharacterDataModified,DOMNodeInserted,DOMNodeInsertedIntoDocument,DOMNodeRemoved,DOMNodeRemovedFromDocument,DOMSubtreeModified"
  },
  {
    "key": "mutationobserver",
    "title": "Mutation Observer",
    "description": "Method for observing and reacting to changes to the DOM. Replaces MutationEvents, which is deprecated.",
    "keywords": "MutationObserver"
  },
  {
    "key": "namevalue-storage",
    "title": "Web Storage - name/value pairs",
    "description": "Method of storing data locally like cookies, but for larger amounts of data (sessionStorage and localStorage, used to fall under HTML5).",
    "keywords": "webstorage,local storage"
  },
  {
    "key": "native-filesystem-api",
    "title": "Native Filesystem API",
    "description": "API for manipulating files in the device's native file system (not in a sandbox).",
    "keywords": "chooseFileSystemEntries,getFile"
  },
  {
    "key": "nav-timing",
    "title": "Navigation Timing API",
    "description": "API for accessing timing information related to navigation and elements.",
    "keywords": "performance,performance.timing,performancenavigation"
  },
  {
    "key": "netinfo",
    "title": "Network Information API",
    "description": "The Network Information API enables web applications to access information about the network connection in use by the device. Accessed via `navigator.connection`",
    "keywords": "performance,network,network information,netinfo"
  },
  {
    "key": "notifications",
    "title": "Web Notifications",
    "description": "Method of alerting the user outside of a web page by displaying notifications (that do not require interaction by the user).",
    "keywords": ""
  },
  {
    "key": "object-entries",
    "title": "Object.entries",
    "description": "The `Object.entries()` method creates a multi-dimensional array of key value pairs from the given object.",
    "keywords": "ecmascript 2017,javascript"
  },
  {
    "key": "object-fit",
    "title": "CSS3 object-fit/object-position",
    "description": "Method of specifying how an object (image or video) should fit inside its box. object-fit options include \"contain\" (fit according to aspect ratio), \"fill\" (stretches object to fill) and \"cover\" (overflows box but maintains ratio), where object-position allows the object to be repositioned like background-image does.",
    "keywords": "objectfit,objectposition"
  },
  {
    "key": "object-observe",
    "title": "Object.observe data binding",
    "description": "Method for data binding, a now-withdrawn ECMAScript 7 proposal",
    "keywords": ""
  },
  {
    "key": "object-values",
    "title": "Object.values method",
    "description": "The `Object.values()` method returns an array of a given object's own enumerable property values.",
    "keywords": "object,values"
  },
  {
    "key": "objectrtc",
    "title": "Object RTC (ORTC) API for WebRTC",
    "description": "Enables mobile endpoints to talk to servers and web browsers with Real-Time Communications (RTC) capabilities via native and simple JavaScript APIs",
    "keywords": "RTC,WebRTC,ORTC,ObjectRTC,RTCIceTransport,RTCIceGatherer,RTCRtpSender,RTCRtpReceiver,Real Time,video,webcam"
  },
  {
    "key": "offline-apps",
    "title": "Offline web applications",
    "description": "Now deprecated method of defining web page files to be cached using a cache manifest file, allowing them to work offline on subsequent visits to the page. ",
    "keywords": "appcache,applicationcache,app cache,application cache,online"
  },
  {
    "key": "offscreencanvas",
    "title": "OffscreenCanvas",
    "description": "OffscreenCanvas allows canvas drawing to occur with no connection to the DOM and can be used inside workers.",
    "keywords": ""
  },
  {
    "key": "ogg-vorbis",
    "title": "Ogg Vorbis audio format",
    "description": "Vorbis is a free and open source audio format, most commonly used with the Ogg container.",
    "keywords": ".ogg,.oga,application/ogg,audio/ogg"
  },
  {
    "key": "ogv",
    "title": "Ogg/Theora video format",
    "description": "Free lossy video compression format.",
    "keywords": "xiph"
  },
  {
    "key": "ol-reversed",
    "title": "Reversed attribute of ordered lists",
    "description": "This attribute makes an ordered list number its items in descending order (large to small), instead of ascending order (small to large; the default). The order that the list items are displayed in is not affected.",
    "keywords": "reversed,list,ol,attribute"
  },
  {
    "key": "once-event-listener",
    "title": "\"once\" event listener option",
    "description": "Causes an event listener to be automatically removed after it gets invoked, so that it only gets invoked once. Similar to jQuery's `$.one()` feature.",
    "keywords": "event,listener,options,once"
  },
  {
    "key": "online-status",
    "title": "Online/offline status",
    "description": "Events to indicate when the user's connected (`online` and `offline` events) and the `navigator.onLine` property to see current status.",
    "keywords": ""
  },
  {
    "key": "opus",
    "title": "Opus",
    "description": "Royalty-free open audio codec by IETF, which incorporated SILK from Skype and CELT from Xiph.org, to serve higher sound quality and lower latency at the same bitrate.",
    "keywords": ""
  },
  {
    "key": "orientation-sensor",
    "title": "Orientation Sensor",
    "description": "Defines a base orientation sensor interface and concrete sensor subclasses to monitor the device’s physical orientation in relation to a stationary three dimensional Cartesian coordinate system.",
    "keywords": ""
  },
  {
    "key": "outline",
    "title": "CSS outline properties",
    "description": "The CSS outline properties draw a border around an element that does not affect layout, making it ideal for highlighting. This covers the `outline` shorthand, as well as `outline-width`, `outline-style`, `outline-color` and `outline-offset`. ",
    "keywords": "-moz-outline,outline-width,outline-style,outline-color,outline-radius"
  },
  {
    "key": "pad-start-end",
    "title": "String.prototype.padStart(), String.prototype.padEnd()",
    "description": "The `padStart()` and `padEnd()` methods pad the current string with a given string (eventually repeated) so that the resulting string reaches a given length. The pad is applied from the start (left) of the current string for `padStart()`, and applied from the end (right) of the current string for `padEnd()`.",
    "keywords": "pad,pad start,pad end"
  },
  {
    "key": "page-transition-events",
    "title": "PageTransitionEvent",
    "description": "Fired at the Window when the page's entry in the session history stops being the current entry. Includes the `pageshow` and `pagehide` events.",
    "keywords": "history,page,transition,hide,show,bfcache,event,persisted"
  },
  {
    "key": "pagevisibility",
    "title": "Page Visibility",
    "description": "JavaScript API for determining whether a document is visible on the display",
    "keywords": "visibilitystate,visibilitychange,onvisibilitychange"
  },
  {
    "key": "passive-event-listener",
    "title": "Passive event listeners",
    "description": "Event listeners created with the `passive: true` option cannot cancel (`preventDefault()`) the events they receive. Primarily intended to be used with touch events and `wheel` events. Since they cannot prevent scrolls, passive event listeners allow the browser to perform optimizations that result in smoother scrolling.",
    "keywords": "passive,event,listener,options"
  },
  {
    "key": "path2d",
    "title": "Path2D",
    "description": "Allows path objects to be declared on 2D canvas surfaces",
    "keywords": "addpath"
  },
  {
    "key": "payment-request",
    "title": "Payment Request API",
    "description": "Payment Request is a new API for the open web that makes checkout flows easier, faster and consistent on shopping sites.",
    "keywords": "PaymentRequest,Web Payments"
  },
  {
    "key": "permissions-api",
    "title": "Permissions API",
    "description": "High-level JavaScript API for checking and requesting permissions",
    "keywords": "web-permissions,navigator.permissions"
  },
  {
    "key": "picture",
    "title": "Picture element",
    "description": "A responsive images method to control which image resource a user agent presents to a user, based on resolution, media query and/or support for a particular image format",
    "keywords": "<picture>"
  },
  {
    "key": "picture-in-picture",
    "title": "Picture-in-Picture",
    "description": "Allows websites to create a floating video window that is always on top of other windows so that users may continue consuming media while they interact with other sites or applications on their device.",
    "keywords": "Picture-in-Picture,PictureInPicture,pip,pop-out,autoPictureInPicture,disablePictureInPicture,auto,disable,picture in picture,pseudo"
  },
  {
    "key": "ping",
    "title": "Ping attribute",
    "description": "When used on an anchor, this attribute signifies that the browser should send a ping request the resource the attribute points to.",
    "keywords": "ping,a.ping,a[ping],ping attribute"
  },
  {
    "key": "png-alpha",
    "title": "PNG alpha transparency",
    "description": "Semi-transparent areas in PNG files",
    "keywords": ""
  },
  {
    "key": "pointer",
    "title": "Pointer events",
    "description": "This specification integrates various inputs from mice, touchscreens, and pens, making separate implementations no longer necessary and authoring for cross-device pointers easier. Not to be mistaken with the unrelated \"pointer-events\" CSS property.",
    "keywords": "pointerdown,pointermove,pointerup,pointercancel,pointerover,pointerout,pointerenter,pointerleave"
  },
  {
    "key": "pointer-events",
    "title": "CSS pointer-events (for HTML)",
    "description": "This CSS property, when set to \"none\" allows elements to not receive hover/click events, instead the event will occur on anything behind it. ",
    "keywords": "pointerevents,pointer-events:none"
  },
  {
    "key": "pointerlock",
    "title": "Pointer Lock API",
    "description": "API that provides access to raw mouse movement data. This is done by ignoring boundaries resulting from screen edges where the cursor can't go beyond, providing proper control for first person or real time strategy games. ",
    "keywords": "mouselock,pointer lock,mouse lock,requestPointerLock,pointerLockElement,exitPointerLock,movementX,movementY"
  },
  {
    "key": "portals",
    "title": "Portals",
    "description": "Portals enable seamless navigation between sites or pages. A new page can be loaded as an inset using the `<portal>` element (similar to an iframe) which can then seamlessly transition to the new navigated state when \"activated\".",
    "keywords": "portal api,portals api,portal element,htmlportalelement,portal.activate,onportalactivate"
  },
  {
    "key": "prefers-color-scheme",
    "title": "prefers-color-scheme media query",
    "description": "Media query to detect if the user has set their system to use a light or dark color theme.",
    "keywords": "prefers-dark-interface"
  },
  {
    "key": "prefers-reduced-motion",
    "title": "prefers-reduced-motion media query",
    "description": "CSS media query based on a user preference for preferring reduced motion (animation, etc).",
    "keywords": "no-preference"
  },
  {
    "key": "progress",
    "title": "progress element",
    "description": "Method of indicating a progress state.",
    "keywords": "#progressmeter,<progress>"
  },
  {
    "key": "promise-finally",
    "title": "Promise.prototype.finally",
    "description": "When the promise is settled, whether fulfilled or rejected, the specified callback function is executed.",
    "keywords": "promise.finally"
  },
  {
    "key": "promises",
    "title": "Promises",
    "description": "A promise represents the eventual result of an asynchronous operation.",
    "keywords": "futures"
  },
  {
    "key": "proximity",
    "title": "Proximity API",
    "description": "Defines events that provide information about the distance between a device and an object, as measured by a proximity sensor.",
    "keywords": ""
  },
  {
    "key": "proxy",
    "title": "Proxy object",
    "description": "The Proxy object allows custom behavior to be defined for fundamental operations. Useful for logging, profiling, object visualization, etc.",
    "keywords": "proxies,es6,es2015,traps,meta,virtual,logging,host"
  },
  {
    "key": "publickeypinning",
    "title": "Public Key Pinning",
    "description": "Declare that a website's HTTPS certificate should only be treated as valid if the public key is contained in a specified list to prevent MITM attacks that use valid CA-issued certificates.",
    "keywords": "pkp,hpkp,security,header"
  },
  {
    "key": "push-api",
    "title": "Push API",
    "description": "API to allow messages to be pushed from a server to a browser, even when the site isn't focused or even open in the browser.",
    "keywords": "push notifications"
  },
  {
    "key": "queryselector",
    "title": "querySelector/querySelectorAll",
    "description": "Method of accessing DOM elements using CSS selectors",
    "keywords": "query,selectors,selectors api,document.queryselector"
  },
  {
    "key": "readonly-attr",
    "title": "readonly attribute of input and textarea elements",
    "description": "Makes the form control non-editable. Unlike the `disabled` attribute, `readonly` form controls are still included in form submissions and the user can still select (but not edit) their value text.",
    "keywords": "readonly,read,attribute,edit,editable"
  },
  {
    "key": "referrer-policy",
    "title": "Referrer Policy",
    "description": "A policy that controls how much information is shared through the HTTP referrer header. Helps to protect user privacy.",
    "keywords": "meta,referrer,referer"
  },
  {
    "key": "registerprotocolhandler",
    "title": "Custom protocol handling",
    "description": "Method of allowing a webpage to handle a given protocol using `navigator.registerProtocolHandler`. This allows certain URLs to be opened by a given web application, for example `mailto:` addresses can be opened by a webmail client.",
    "keywords": ""
  },
  {
    "key": "rel-noopener",
    "title": "rel=noopener",
    "description": "Ensure new browsing contexts are opened without a useful `window.opener`",
    "keywords": "rel,relation,link,security"
  },
  {
    "key": "rel-noreferrer",
    "title": "Link type \"noreferrer\"",
    "description": "Links with `rel=\"noreferrer\"` set do not send the request's \"referrer\" header. This prevents the destination site from seeing what URL the user came from.",
    "keywords": ""
  },
  {
    "key": "rellist",
    "title": "relList (DOMTokenList)",
    "description": "Method of easily manipulating rel attribute values on elements, using the DOMTokenList object (similar to classList).",
    "keywords": ""
  },
  {
    "key": "rem",
    "title": "rem (root em) units",
    "description": "Type of unit similar to `em`, but relative only to the root element, not any parent element. Thus compounding does not occur as it does with `em` units.",
    "keywords": "rems"
  },
  {
    "key": "requestanimationframe",
    "title": "requestAnimationFrame",
    "description": "API allowing a more efficient way of running script-based animation, compared to traditional methods using timeouts. Also covers support for `cancelAnimationFrame`",
    "keywords": ""
  },
  {
    "key": "requestidlecallback",
    "title": "requestIdleCallback",
    "description": "API allowing the execution of JavaScript to be queued to run in idle browser time, either at the end of a frame or when the user is inactive. Also covers support for `cancelIdleCallback`. The API has similarities with `requestAnimationFrame`.",
    "keywords": "requestIdleCallback,request,idle"
  },
  {
    "key": "resizeobserver",
    "title": "Resize Observer",
    "description": "Method for observing and reacting to changes to sizes of DOM elements.",
    "keywords": "ResizeObserver,onresize,resize events"
  },
  {
    "key": "resource-timing",
    "title": "Resource Timing",
    "description": "Method to help web developers to collect complete timing information related to resources on a document.",
    "keywords": "performance,testing,resource"
  },
  {
    "key": "rest-parameters",
    "title": "Rest parameters",
    "description": "Allows representation of an indefinite number of arguments as an array.",
    "keywords": "ES6,JavaScript"
  },
  {
    "key": "rtcpeerconnection",
    "title": "WebRTC Peer-to-peer connections",
    "description": "Method of allowing two users to communicate directly, browser to browser using the RTCPeerConnection API.",
    "keywords": ""
  },
  {
    "key": "ruby",
    "title": "Ruby annotation",
    "description": "Method of adding pronunciation or other annotations using ruby elements (primarily used in East Asian typography).",
    "keywords": "ruby-base,ruby-text,ruby-position,ruby-merge,ruby-align"
  },
  {
    "key": "run-in",
    "title": "display: run-in",
    "description": "If the run-in box contains a block box, same as block. If a block box follows the run-in box, the run-in box becomes the first inline box of the block box. If an inline box follows, the run-in box becomes a block box.",
    "keywords": "display,run-in"
  },
  {
    "key": "same-site-cookie-attribute",
    "title": "'SameSite' cookie attribute",
    "description": "Same-site cookies (\"First-Party-Only\" or \"First-Party\") allow servers to mitigate the risk of CSRF and information leakage attacks by asserting that a particular cookie should only be sent with requests initiated from the same registrable domain.",
    "keywords": "security,cookies,cookie,csrf"
  },
  {
    "key": "screen-orientation",
    "title": "Screen Orientation",
    "description": "Provides the ability to read the screen orientation state, to be informed when this state changes, and to be able to lock the screen orientation to a specific state.",
    "keywords": "lockorientation,unlockorientation"
  },
  {
    "key": "script-async",
    "title": "async attribute for external scripts",
    "description": "The boolean async attribute on script elements allows the external JavaScript file to run when it's available, without delaying page load first.",
    "keywords": ""
  },
  {
    "key": "script-defer",
    "title": "defer attribute for external scripts",
    "description": "The boolean defer attribute on script elements allows the external JavaScript file to run when the DOM is loaded, without delaying page load first.",
    "keywords": ""
  },
  {
    "key": "scrollintoview",
    "title": "scrollIntoView",
    "description": "The `Element.scrollIntoView()` method scrolls the current element into the visible area of the browser window. Parameters can be provided to set the position inside the visible area as well as whether scrolling should be instant or smooth.",
    "keywords": ""
  },
  {
    "key": "scrollintoviewifneeded",
    "title": "Element.scrollIntoViewIfNeeded()",
    "description": "If the element is fully within the visible area of the viewport, it does nothing. Otherwise, the element is scrolled into view. A proprietary variant of the standard `Element.scrollIntoView()` method.",
    "keywords": "scrollIntoViewIfNeeded,scroll"
  },
  {
    "key": "sdch",
    "title": "SDCH Accept-Encoding/Content-Encoding",
    "description": "Shared Dictionary Compression over HTTP",
    "keywords": "http,compression,accept,content,encoding,sdch"
  },
  {
    "key": "selection-api",
    "title": "Selection API",
    "description": "API for accessing selected content of a document, including the `window.getSelection()` method, as well as the `selectstart` & `selectionchange` events on `document`.",
    "keywords": ""
  },
  {
    "key": "server-timing",
    "title": "Server Timing",
    "description": "Mechanism for web developers to annotate network requests with server timing information.",
    "keywords": "performance,performance.timing,resource,performancenavigation,PerformanceServerTiming"
  },
  {
    "key": "serviceworkers",
    "title": "Service Workers",
    "description": "Method that enables applications to take advantage of persistent background processing, including hooks to enable bootstrapping of web applications while offline.",
    "keywords": ""
  },
  {
    "key": "setimmediate",
    "title": "Efficient Script Yielding: setImmediate()",
    "description": "Yields control flow without the minimum delays enforced by setTimeout",
    "keywords": "setImmediate,clearImmediate,setTimeout,performance"
  },
  {
    "key": "shadowdom",
    "title": "Shadow DOM (deprecated V0 spec)",
    "description": "Original V0 version of the Shadow DOM specification. See [Shadow DOM V1](#feat=shadowdomv1) for support for the latest version. ",
    "keywords": ""
  },
  {
    "key": "shadowdomv1",
    "title": "Shadow DOM (V1)",
    "description": "Method of establishing and maintaining functional boundaries between DOM trees and how these trees interact with each other within a document, thus enabling better functional encapsulation within the DOM & CSS.",
    "keywords": "webcomponents,shadow dom,attachShadow"
  },
  {
    "key": "sharedarraybuffer",
    "title": "Shared Array Buffer",
    "description": "Type of ArrayBuffer that can be shared across Workers.",
    "keywords": ""
  },
  {
    "key": "sharedworkers",
    "title": "Shared Web Workers",
    "description": "Method of allowing multiple scripts to communicate with a single web worker.",
    "keywords": "shared worker"
  },
  {
    "key": "sni",
    "title": "Server Name Indication",
    "description": "An extension to the TLS computer networking protocol by which a client indicates which hostname it is attempting to connect to at the start of the handshaking process.",
    "keywords": "sni"
  },
  {
    "key": "spdy",
    "title": "SPDY protocol",
    "description": "Networking protocol for low-latency transport of content over the web. Superseded by HTTP version 2.",
    "keywords": ""
  },
  {
    "key": "speech-recognition",
    "title": "Speech Recognition API",
    "description": "Method to provide speech input in a web browser.",
    "keywords": "#web-speech,speechrecognition,ASR"
  },
  {
    "key": "speech-synthesis",
    "title": "Speech Synthesis API",
    "description": "A web API for controlling a text-to-speech output.",
    "keywords": "speech,synthesis,speechSynthesis,TTS,SpeechSynthesisUtterance,"
  },
  {
    "key": "spellcheck-attribute",
    "title": "Spellcheck attribute",
    "description": "Attribute for `input`/`textarea` fields to enable/disable the browser's spellchecker.",
    "keywords": "spelling"
  },
  {
    "key": "sql-storage",
    "title": "Web SQL Database",
    "description": "Method of storing data client-side, allows SQLite database queries for access and manipulation",
    "keywords": "db-storage,websql"
  },
  {
    "key": "srcset",
    "title": "Srcset and sizes attributes",
    "description": "The `srcset` and `sizes` attributes on `img` (or `source`) elements allow authors to define various image resources and \"hints\" that assist a user agent to determine the most appropriate image source to display (e.g. high-resolution displays, small monitors, etc).",
    "keywords": "srcset attribute"
  },
  {
    "key": "stream",
    "title": "getUserMedia/Stream API",
    "description": "Method of accessing external device data (such as a webcam video stream). Formerly this was envisioned as the <device> element.",
    "keywords": "camera,device,getUserMedia,media stream,mediastream,Media Capture API"
  },
  {
    "key": "streams",
    "title": "Streams",
    "description": "Method of creating, composing, and consuming streams of data, that map efficiently to low-level I/O primitives, and allow easy composition with built-in backpressure and queuing.",
    "keywords": "streams,writablestream,readablestream"
  },
  {
    "key": "stricttransportsecurity",
    "title": "Strict Transport Security",
    "description": "Declare that a website is only accessible over a secure connection (HTTPS).",
    "keywords": "sts,hsts,security,header"
  },
  {
    "key": "style-scoped",
    "title": "Scoped CSS",
    "description": "Allows CSS rules to be scoped to part of the document, based on the position of the style element. The attribute has been [removed from the current specification](https://github.com/whatwg/html/issues/552).",
    "keywords": "scope"
  },
  {
    "key": "subresource-integrity",
    "title": "Subresource Integrity",
    "description": "Subresource Integrity enables browsers to verify that file is delivered without unexpected manipulation.",
    "keywords": "SRI, security, hash"
  },
  {
    "key": "svg",
    "title": "SVG (basic support)",
    "description": "Method of displaying basic Vector Graphics features using the embed or object elements. Refers to the SVG 1.1 spec.",
    "keywords": "rect,circle,ellipse,line,polyline,polygon,defs,symbol,use,tspan,tref,textpath,stroke-dasharray,stroke-dashoffset,stroke-opacity"
  },
  {
    "key": "svg-css",
    "title": "SVG in CSS backgrounds",
    "description": "Method of using SVG images as CSS backgrounds",
    "keywords": "svg-in-css,svgincss,css-svg"
  },
  {
    "key": "svg-filters",
    "title": "SVG filters",
    "description": "Method of using Photoshop-like effects on SVG objects including blurring and color manipulation.",
    "keywords": ""
  },
  {
    "key": "svg-fonts",
    "title": "SVG fonts",
    "description": "Method of using fonts defined as SVG shapes. Removed from [SVG 2.0](https://www.w3.org/TR/SVG2/changes.html#fonts) and considered as a deprecated feature with support being removed from browsers.",
    "keywords": ""
  },
  {
    "key": "svg-fragment",
    "title": "SVG fragment identifiers",
    "description": "Method of displaying only a part of an SVG image by defining a view ID or view box dimensions as the file's fragment identifier.",
    "keywords": "fragments,sprite,svg,use"
  },
  {
    "key": "svg-html",
    "title": "SVG effects for HTML",
    "description": "Method of using SVG transforms, filters, etc on HTML elements using either CSS or the foreignObject element",
    "keywords": ""
  },
  {
    "key": "svg-html5",
    "title": "Inline SVG in HTML5",
    "description": "Method of using SVG tags directly in HTML documents. Requires HTML5 parser.",
    "keywords": ""
  },
  {
    "key": "svg-img",
    "title": "SVG in HTML img element",
    "description": "Method of displaying SVG images in HTML using <img>.",
    "keywords": "svg-as-img,svg-in-img"
  },
  {
    "key": "svg-smil",
    "title": "SVG SMIL animation",
    "description": "Method of using animation elements to animate SVG images",
    "keywords": "svg animation"
  },
  {
    "key": "sxg",
    "title": "Signed HTTP Exchanges (SXG)",
    "description": "Part of the Web Packaging spec, Signed HTTP Exchanges allow a different origin server to provide a resource, and this will be treated as if it came from the original server. This can be use with AMP CDNs, for example, to allow the original URL to be displayed in the URL bar.",
    "keywords": "SXG, WebPackage, AMP"
  },
  {
    "key": "tabindex-attr",
    "title": "tabindex global attribute",
    "description": "Specifies the focusability of the element and in what order (if any) it should become focused (relative to other elements) when \"tabbing\" through the document.",
    "keywords": "tabindex,tab,tabIndex"
  },
  {
    "key": "template",
    "title": "HTML templates",
    "description": "Method of declaring a portion of reusable markup that is parsed but not rendered until cloned.",
    "keywords": "webcomponents, template"
  },
  {
    "key": "template-literals",
    "title": "ES6 Template Literals (Template Strings)",
    "description": "Template literals are string literals allowing embedded expressions. You can use multi-line strings and string interpolation features with them. Formerly known as template strings.",
    "keywords": "``,multiline"
  },
  {
    "key": "text-decoration",
    "title": "text-decoration styling",
    "description": "Method of defining the type, style and color of lines in the text-decoration property. These can be defined as shorthand (e.g. `text-decoration: line-through dashed blue`) or as single properties (e.g. `text-decoration-color: blue`)",
    "keywords": "text-decoration-line,text-decoration-style,text-decoration-color,text-decoration-skip"
  },
  {
    "key": "text-emphasis",
    "title": "text-emphasis styling",
    "description": "Method of using small symbols next to each glyph to emphasize a run of text, commonly used in East Asian languages. The `text-emphasis` shorthand, and its `text-emphasis-style` and `text-emphasis-color` longhands, can be used to apply marks to the text. The `text-emphasis-position` property, which inherits separately, allows setting the emphasis marks' position with respect to the text.",
    "keywords": "text-emphasis,text-emphasis-position,text-emphasis-style,text-emphasis-color"
  },
  {
    "key": "text-overflow",
    "title": "CSS3 Text-overflow",
    "description": "Append ellipsis when text overflows its containing element",
    "keywords": "textoverflow,ellipsis"
  },
  {
    "key": "text-size-adjust",
    "title": "CSS text-size-adjust",
    "description": "On mobile devices, the text-size-adjust CSS property allows Web authors to control if and how the text-inflating algorithm is applied to the textual content of the element it is applied to.",
    "keywords": ""
  },
  {
    "key": "text-stroke",
    "title": "CSS text-stroke and text-fill",
    "description": "Method of declaring the outline (stroke) width and color for text.",
    "keywords": "textstroke,stroke-color,stroke-width,text-fill-color,text-outline"
  },
  {
    "key": "textcontent",
    "title": "Node.textContent",
    "description": "DOM Node property representing the text content of a node and its descendants",
    "keywords": ""
  },
  {
    "key": "textencoder",
    "title": "TextEncoder & TextDecoder",
    "description": "`TextEncoder` encodes a JavaScript string into bytes using the UTF-8 encoding and returns the resulting `Uint8Array` of those bytes. `TextDecoder` does the reverse.",
    "keywords": "encoding,text,encoder,decoding,decoder,utf,8"
  },
  {
    "key": "tls1-1",
    "title": "TLS 1.1",
    "description": "Version 1.1 of the Transport Layer Security (TLS) protocol.",
    "keywords": ""
  },
  {
    "key": "tls1-2",
    "title": "TLS 1.2",
    "description": "Version 1.2 of the Transport Layer Security (TLS) protocol. Allows for data/message confidentiality, and message authentication codes for message integrity and as a by-product message authentication.",
    "keywords": ""
  },
  {
    "key": "tls1-3",
    "title": "TLS 1.3",
    "description": "Version 1.3 (the latest one) of the Transport Layer Security (TLS) protocol. Removes weaker elliptic curves and hash functions.",
    "keywords": ""
  },
  {
    "key": "touch",
    "title": "Touch events",
    "description": "Method of registering when, where and how the interface is touched, for devices with a touch screen. These DOM events are similar to mousedown, mousemove, etc.",
    "keywords": "touchstart,touchend,touchmove,touchenter,touchleave,touchcancel"
  },
  {
    "key": "transforms2d",
    "title": "CSS3 2D Transforms",
    "description": "Method of transforming an element including rotating, scaling, etc. Includes support for `transform` as well as `transform-origin` properties.",
    "keywords": "transformation,translate,translatex,translatey,translatez,transform3d,rotation,rotate,scale,skew,css-transforms,transform-origin,transform:rotate,transform:scale,transform:skew"
  },
  {
    "key": "transforms3d",
    "title": "CSS3 3D Transforms",
    "description": "Method of transforming an element in the third dimension using the `transform` property. Includes support for the `perspective` property to set the perspective in z-space and the `backface-visibility` property to toggle display of the reverse side of a 3D-transformed element.",
    "keywords": "css 3d,3dtransforms,translate3d,backface visibility,perspective,transform-origin,transform-style"
  },
  {
    "key": "trusted-types",
    "title": "Trusted Types for DOM manipulation",
    "description": "An API that forces the developer to be very explicit about their use of powerful DOM-injection APIs. Can greatly improve security against XSS attacks.",
    "keywords": "trustedTypes,trustedHTML,trusted-types,require-trusted-types-for"
  },
  {
    "key": "ttf",
    "title": "TTF/OTF - TrueType and OpenType font support",
    "description": "Support for the TrueType (.ttf) and OpenType (.otf) outline font formats in @font-face. ",
    "keywords": ""
  },
  {
    "key": "typedarrays",
    "title": "Typed Arrays",
    "description": "JavaScript typed arrays provide a mechanism for accessing raw binary data much more efficiently. Includes: `Int8Array`, `Uint8Array`, `Uint8ClampedArray`, `Int16Array`, `Uint16Array`, `Int32Array`, `Uint32Array`, `Float32Array` & `Float64Array`\r\n",
    "keywords": "ES6,JavaScript,dataview,arraybuffer"
  },
  {
    "key": "u2f",
    "title": "FIDO U2F API",
    "description": "JavaScript API to interact with Universal Second Factor (U2F) devices. This allows users to log into sites more securely using two-factor authentication with a USB dongle.",
    "keywords": "fido,u2f"
  },
  {
    "key": "unhandledrejection",
    "title": "unhandledrejection/rejectionhandled events",
    "description": "The `unhandledrejection` event is fired when a Promise is rejected but there is no rejection handler to deal with the rejection. The `rejectionhandled` event is fired when a Promise is rejected, and after the rejection is handled by the promise's rejection handling code.",
    "keywords": "onunhandledrejection,onrejectionhandled,promiserejectionevent"
  },
  {
    "key": "upgradeinsecurerequests",
    "title": "Upgrade Insecure Requests",
    "description": "Declare that browsers should transparently upgrade HTTP resources on a website to HTTPS.",
    "keywords": "security,header,uir,upgrade-insecure-requests"
  },
  {
    "key": "url",
    "title": "URL API",
    "description": "API to retrieve the various parts that make up a given URL from a given URL string.",
    "keywords": "url constructor"
  },
  {
    "key": "url-scroll-to-text-fragment",
    "title": "URL Scroll-To-Text Fragment",
    "description": "URL fragment that defines a piece of text to be scrolled into view and highlighted.",
    "keywords": "#:~:text=,Scroll To Text,textTarget,search"
  },
  {
    "key": "urlsearchparams",
    "title": "URLSearchParams",
    "description": "The URLSearchParams interface defines utility methods to work with the query string of a URL.",
    "keywords": "url,search,params"
  },
  {
    "key": "use-strict",
    "title": "ECMAScript 5 Strict Mode",
    "description": "Method of placing code in a \"strict\" operating context.",
    "keywords": ""
  },
  {
    "key": "user-select-none",
    "title": "CSS user-select: none",
    "description": "Method of preventing text/element selection using CSS. ",
    "keywords": ""
  },
  {
    "key": "user-timing",
    "title": "User Timing API",
    "description": "Method to help web developers measure the performance of their applications by giving them access to high precision timestamps.",
    "keywords": "performance,testing,mark,measure"
  },
  {
    "key": "variable-fonts",
    "title": "Variable fonts",
    "description": "OpenType font settings that allows a single font file to behave like multiple fonts: it can contain all the allowed variations in width, weight, slant, optical size, or any other exposed axes of variation as defined by the font designer. Variations can be applied via the `font-variation-settings` property.",
    "keywords": "variable fonts, variation fonts, font variations"
  },
  {
    "key": "vibration",
    "title": "Vibration API",
    "description": "Method to access the vibration mechanism of the hosting device.",
    "keywords": "vibration,mobile,device"
  },
  {
    "key": "video",
    "title": "Video element",
    "description": "Method of playing videos on webpages (without requiring a plug-in). Includes support for the following media properties: `currentSrc`, `currentTime`, `paused`, `playbackRate`, `buffered`, `duration`, `played`, `seekable`, `ended`, `autoplay`, `loop`, `controls`, `volume` & `muted`",
    "keywords": "<video>,videoHeight,videoWidth,HTMLVideoElement.videoHeight,HTMLVideoElement.videoWidth"
  },
  {
    "key": "videotracks",
    "title": "Video Tracks",
    "description": "Method of specifying and selecting between multiple video tracks. Useful for providing sign language tracks, burnt-in captions or subtitles, alternative camera angles, etc.",
    "keywords": "VideoTrack,VideoTrackList,media,multiple,selection"
  },
  {
    "key": "viewport-units",
    "title": "Viewport units: vw, vh, vmin, vmax",
    "description": "Length units representing a percentage of the current viewport dimensions: width (vw), height (vh), the smaller of the two (vmin), or the larger of the two (vmax).",
    "keywords": "vm,viewport-percentage"
  },
  {
    "key": "wai-aria",
    "title": "WAI-ARIA Accessibility features",
    "description": "Method of providing ways for people with disabilities to use dynamic web content and web applications.",
    "keywords": "wai,aria"
  },
  {
    "key": "wake-lock",
    "title": "Screen Wake Lock API",
    "description": "API to prevent devices from dimming, locking or turning off the screen when the application needs to keep running.",
    "keywords": "navigator.wakelock.request,wakelocksentinel,screen-wake-lock"
  },
  {
    "key": "wasm",
    "title": "WebAssembly",
    "description": "WebAssembly or \"wasm\" is a new portable, size- and load-time-efficient format suitable for compilation to the web.",
    "keywords": "web assembly"
  },
  {
    "key": "wav",
    "title": "Wav audio format",
    "description": "Waveform Audio File Format, aka WAV or WAVE, a typically uncompressed audio format. ",
    "keywords": ""
  },
  {
    "key": "wbr-element",
    "title": "wbr (word break opportunity) element",
    "description": "Represents an extra place where a line of text may optionally be broken.",
    "keywords": "wbr,element,word,break,opportunity"
  },
  {
    "key": "web-animation",
    "title": "Web Animations API",
    "description": "Lets you create animations that are run in the browser, as well as inspect and manipulate animations created through declarative means like CSS.",
    "keywords": "animate,element.animate,play,pause,reverse,finish,currentTime,startTime,playbackRate,playState"
  },
  {
    "key": "web-app-manifest",
    "title": "Add to home screen (A2HS)",
    "description": "The ability for a user to \"install\" a website and use it as if it was a natively installed app. To enable this behaviour, a website must serve a valid Web App Manifest and load it's assets through a [Service Worker](https://caniuse.com/#feat=serviceworkers).",
    "keywords": "manifest,pwa,progressive web app,web app,wam,web app manifest,install,appinstalled,beforeinstallprompt,onappinstalled,onbeforeinstallprompt"
  },
  {
    "key": "web-bluetooth",
    "title": "Web Bluetooth",
    "description": "Allows web sites to communicate over GATT with nearby user-selected Bluetooth devices in a secure and privacy-preserving way.",
    "keywords": "bluetooth,ble,iot,physicalweb,webbluetooth"
  },
  {
    "key": "web-share",
    "title": "Web Share API",
    "description": "A way to allow websites to invoke the native sharing capabilities of the host platform",
    "keywords": "web share,share, share api,intents api"
  },
  {
    "key": "webauthn",
    "title": "Web Authentication API",
    "description": "The Web Authentication API is an extension of the Credential Management API that enables strong authentication with public key cryptography, enabling password-less authentication and / or secure second-factor authentication without SMS texts.",
    "keywords": ""
  },
  {
    "key": "webgl",
    "title": "WebGL - 3D Canvas graphics",
    "description": "Method of generating dynamic 3D graphics using JavaScript, accelerated through hardware",
    "keywords": "web gl"
  },
  {
    "key": "webgl2",
    "title": "WebGL 2.0",
    "description": "Next version of WebGL. Based on OpenGL ES 3.0.",
    "keywords": "web gl"
  },
  {
    "key": "webgpu",
    "title": "WebGPU",
    "description": "An API for complex rendering and compute, using hardware acceleration. Use cases include demanding 3D games and acceleration of scientific calculations. Meant to supersede WebGL.",
    "keywords": ""
  },
  {
    "key": "webm",
    "title": "WebM video format",
    "description": "Multimedia format designed to provide a royalty-free, high-quality open video compression format for use with HTML5 video. WebM supports the video codec VP8 and VP9.",
    "keywords": "matroska"
  },
  {
    "key": "webnfc",
    "title": "Web NFC",
    "description": "This API allows a website to communicate with NFC tags through a device's NFC reader.",
    "keywords": "NDEF,NDEFReader,NDEFWriter"
  },
  {
    "key": "webp",
    "title": "WebP image format",
    "description": "Image format that supports lossy and lossless compression, as well as animation and alpha transparency.",
    "keywords": ""
  },
  {
    "key": "websockets",
    "title": "Web Sockets",
    "description": "Bidirectional communication technology for web apps",
    "keywords": ""
  },
  {
    "key": "webusb",
    "title": "WebUSB",
    "description": "Allows communication with devices via USB (Universal Serial Bus).",
    "keywords": ""
  },
  {
    "key": "webvr",
    "title": "WebVR API",
    "description": "API for accessing virtual reality (VR) devices, including sensors and head-mounted displays. Replaced by the WebXR Device API.",
    "keywords": "getvrdevices,getvrdisplays,getdisplays,navigator.vr"
  },
  {
    "key": "webvtt",
    "title": "WebVTT - Web Video Text Tracks",
    "description": "Format for marking up text captions for multimedia resources.",
    "keywords": "captions,track,vtt,subtitles"
  },
  {
    "key": "webworkers",
    "title": "Web Workers",
    "description": "Method of running scripts in the background, isolated from the web page",
    "keywords": ""
  },
  {
    "key": "webxr",
    "title": "WebXR Device API",
    "description": "API for accessing virtual reality (VR) and augmented reality (AR) devices, including sensors and head-mounted displays.",
    "keywords": "navigator.xr"
  },
  {
    "key": "will-change",
    "title": "CSS will-change property",
    "description": "Method of optimizing animations by informing the browser which elements will change and what properties will change.",
    "keywords": "scroll-position"
  },
  {
    "key": "woff",
    "title": "WOFF - Web Open Font Format",
    "description": "Compressed TrueType/OpenType font that contains information about the font's source.",
    "keywords": ""
  },
  {
    "key": "woff2",
    "title": "WOFF 2.0 - Web Open Font Format",
    "description": "TrueType/OpenType font that provides better compression than WOFF 1.0.",
    "keywords": "woff, fontface, webfonts"
  },
  {
    "key": "word-break",
    "title": "CSS3 word-break",
    "description": "Property to prevent or allow words to be broken over multiple lines between letters.",
    "keywords": "break-all,keep-all"
  },
  {
    "key": "wordwrap",
    "title": "CSS3 Overflow-wrap",
    "description": "Allows lines to be broken within words if an otherwise unbreakable string is too long to fit. Currently mostly supported using the `word-wrap` property.",
    "keywords": "wordwrap,word-wrap,break-word"
  },
  {
    "key": "x-doc-messaging",
    "title": "Cross-document messaging",
    "description": "Method of sending information from a page on one domain to a page on a different one (using postMessage)",
    "keywords": ""
  },
  {
    "key": "x-frame-options",
    "title": "X-Frame-Options HTTP header",
    "description": "An HTTP header which indicates whether the browser should allow the webpage to be displayed in a frame within another webpage. Used as a defense against clickjacking attacks.",
    "keywords": "x-frame-options,frame,options,header,clickjacking"
  },
  {
    "key": "xhr2",
    "title": "XMLHttpRequest advanced features",
    "description": "Adds more functionality to XHR (aka AJAX) requests like file uploads, transfer progress information and the ability to send form data. Previously known as [XMLHttpRequest Level 2](https://www.w3.org/TR/2012/WD-XMLHttpRequest-20120117/), these features now appear simply in the XMLHttpRequest spec.",
    "keywords": "formdata,xhr level 2"
  },
  {
    "key": "xhtml",
    "title": "XHTML served as application/xhtml+xml",
    "description": "A strict form of HTML, and allows embedding of other XML languages",
    "keywords": "xhtml+xml"
  },
  {
    "key": "xhtmlsmil",
    "title": "XHTML+SMIL animation",
    "description": "Method of using SMIL animation in web pages",
    "keywords": ""
  },
  {
    "key": "xml-serializer",
    "title": "DOM Parsing and Serialization",
    "description": "Various DOM parsing and serializing functions, specifically `DOMParser`, `XMLSerializer`, `innerHTML`, `outerHTML` and `insertAdjacentHTML`.",
    "keywords": "parseFromString"
  }
]